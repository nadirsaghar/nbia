Index: JNDIUtils.java
===================================================================
RCS file: /home/globdev/CVS/globus-packages/wsrf/java/core/source/src/org/globus/wsrf/jndi/JNDIUtils.java,v
retrieving revision 1.9.2.1
diff -u -r1.9.2.1 JNDIUtils.java
--- JNDIUtils.java	6 Apr 2006 21:57:07 -0000	1.9.2.1
+++ JNDIUtils.java	20 Jul 2007 18:18:04 -0000
@@ -59,6 +59,14 @@
 
     public static final String JNDI_CONFIG = "jndi-config.xml";
 
+    private static final Hashtable ENV;
+
+    static {
+        ENV = new Hashtable();
+        ENV.put(javax.naming.Context.INITIAL_CONTEXT_FACTORY,
+                "org.apache.naming.java.javaURLContextFactory");
+    }
+
     private static Context initialContext = null;
 
     /**
@@ -109,6 +117,8 @@
 
         Hashtable env = new Hashtable();
         env.put(SynchronizedContext.SYNCHRONIZED, "true");
+        env.put(javax.naming.Context.INITIAL_CONTEXT_FACTORY,
+                "org.apache.naming.java.javaURLContextFactory");
 
         result = new InitialContext(env);
         if(!ContextBindings.isClassLoaderBound())
@@ -203,6 +213,16 @@
         digester.clear();
     }
 
+    /*
+     * Returns properly-initialized initial context.
+     *
+     * @return initial context
+     */
+    public static InitialContext getInitialContext() 
+        throws NamingException {
+        return new InitialContext(ENV);
+    }
+
     /**
      * Retrieves the named object on the specified context. The object returned
      * must be of assignable from the type specified.
@@ -234,10 +254,8 @@
         }
         else
         {
-            Object[] args = 
-                new Object[] {type.getName(),
-                              (tmp == null) ? null : tmp.getClass().getName()};
-            throw new NamingException(i18n.getMessage("expectedType", args));
+            throw new NamingException(i18n.getMessage(
+                "expectedType", type.getName()));
         }
     }
 