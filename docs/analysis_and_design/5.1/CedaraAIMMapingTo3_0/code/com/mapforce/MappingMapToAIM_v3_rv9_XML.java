/**
 * MappingMapToAIM_v3_rv9_XML.java
 *
 * This file was generated by MapForce 2011r2sp1.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package com.mapforce;
import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;
import java.util.*;

public class MappingMapToAIM_v3_rv9_XML extends com.altova.TraceProvider 
{
	private boolean runDoesCloseAll = false;
	public void setCloseObjectsAfterRun(boolean c) {runDoesCloseAll = c;}
	public boolean getCloseObjectsAfterRun() {return runDoesCloseAll;}

	
	static class main implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_instance_generatedAIMSchema11;
	
		public main(com.altova.mapforce.IMFNode var1_instance_generatedAIMSchema11)
		{
			this.var1_instance_generatedAIMSchema11 = var1_instance_generatedAIMSchema11;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 2;
			Object current;
			main closure;
			com.altova.mapforce.IEnumerable var2_filter_elements;
			IEnumerator var3_filter_elements;
			IEnumerator var4_filter_elements;
			javax.xml.namespace.QName var5_create_qname;
			com.altova.mapforce.IMFNode var6_filter_elements;
			com.altova.mapforce.IMFNode var7_filter_elements;
			IEnumerator var8_filter_elements;
			javax.xml.namespace.QName var9_create_qname;
			java.lang.String var10_cast;
			javax.xml.namespace.QName var11_create_qname;
			javax.xml.namespace.QName var12_create_qname;
			javax.xml.namespace.QName var13_create_qname;
			javax.xml.namespace.QName var14_create_qname;
			javax.xml.namespace.QName var15_create_qname;
			javax.xml.namespace.QName var16_create_qname;
			javax.xml.namespace.QName var17_create_qname;
			javax.xml.namespace.QName var18_create_qname;
			javax.xml.namespace.QName var19_create_qname;
			javax.xml.namespace.QName var20_create_qname;
			javax.xml.namespace.QName var21_create_qname;
			com.altova.mapforce.IEnumerable var22_filter_elements;
			com.altova.mapforce.IEnumerable var23_filter_elements;
			com.altova.mapforce.IEnumerable var24_filter_elements;
			com.altova.mapforce.IEnumerable var25_filter_attributes;
			com.altova.mapforce.IEnumerable var26_filter_elements;
			com.altova.mapforce.IEnumerable var27_filter_attributes;
			boolean var28_exists;
			com.altova.mapforce.IMFNode var29_create_element_with_prefix;
			public Enumerator(main closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 2:	if (moveNext_2()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_2() throws Exception {
				state = 4;				
				var2_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Annotations", ""), closure.var1_instance_generatedAIMSchema11));
				if (!(com.altova.functions.Core.exists(var2_filter_elements))) {state = 0; return false; }
				var3_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ImageAnnotation", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var2_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter_elements.moveNext()) {state = 0; return false; }
				var4_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ImageReference", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("imageReferenceCollection", ""), ((com.altova.mapforce.IMFNode)(var3_filter_elements.current())))))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 9;				
				if (!var4_filter_elements.moveNext()) {state = 4; return false; }
				var5_create_qname = com.altova.functions.Core.createQName("type", "http://www.w3.org/2001/XMLSchema-instance");
				if (!(com.altova.functions.Core.exists((new seq1_map_map_filter_attributes(var5_create_qname, ((com.altova.mapforce.IMFNode)(var4_filter_elements.current()))))))) {state = 6; return false; }
				var6_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ImageStudy", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("imageStudy", ""), ((com.altova.mapforce.IMFNode)(var4_filter_elements.current()))))));
				var7_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ImageSeries", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("imageSeries", ""), var6_filter_elements))));
				var8_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Image", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("imageCollection", ""), var7_filter_elements)))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var8_filter_elements.moveNext()) {state = 6; return false; }
				var9_create_qname = com.altova.functions.Core.createQName("name", "");
				var10_cast = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(var9_create_qname, ((com.altova.mapforce.IMFNode)(var3_filter_elements.current())))));
				if (!(com.altova.functions.Core.contains(var10_cast, "Ref3D"))) {state = 11; return false; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 9;				
				var11_create_qname = com.altova.functions.Core.createQName("codingSchemeDesignator", "");
				var12_create_qname = com.altova.functions.Core.createQName("uniqueIdentifier", "");
				var13_create_qname = com.altova.functions.Core.createQName("cagridId", "");
				var14_create_qname = com.altova.functions.Core.createQName("codeMeaning", "");
				var15_create_qname = com.altova.functions.Core.createQName("codeValue", "");
				var16_create_qname = com.altova.functions.Core.createQName("startTime", "");
				var17_create_qname = com.altova.functions.Core.createQName("dateTime", "");
				var18_create_qname = com.altova.functions.Core.createQName("instanceUID", "");
				var19_create_qname = com.altova.functions.Core.createQName("comment", "");
				var20_create_qname = com.altova.functions.Core.createQName("codingSchemeVersion", "");
				var21_create_qname = com.altova.functions.Core.createQName("startDate", "");
				var22_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("textAnnotationCollection", ""), ((com.altova.mapforce.IMFNode)(var3_filter_elements.current()))));
				var23_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("user", ""), ((com.altova.mapforce.IMFNode)(var3_filter_elements.current()))));
				var24_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("person", ""), ((com.altova.mapforce.IMFNode)(var3_filter_elements.current()))));
				var25_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var20_create_qname, ((com.altova.mapforce.IMFNode)(var3_filter_elements.current()))));
				var26_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("geometricShapeCollection", ""), ((com.altova.mapforce.IMFNode)(var3_filter_elements.current()))));
				var27_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var19_create_qname, ((com.altova.mapforce.IMFNode)(var3_filter_elements.current()))));
				var28_exists = com.altova.functions.Core.exists(var23_filter_elements);
				var29_create_element_with_prefix = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("ImageAnnotation", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq3_seq_(var13_create_qname, ((com.altova.mapforce.IMFNode)(var3_filter_elements.current())), var19_create_qname, var17_create_qname, var9_create_qname, var10_cast, var12_create_qname, ((com.altova.mapforce.IMFNode)(var8_filter_elements.current())), var15_create_qname, var14_create_qname, var11_create_qname, var25_filter_attributes, var20_create_qname, var28_exists, var23_filter_elements, var27_filter_attributes, var5_create_qname, ((com.altova.mapforce.IMFNode)(var4_filter_elements.current())), var6_filter_elements, var18_create_qname, var21_create_qname, var16_create_qname, var7_filter_elements, var26_filter_elements, var24_filter_elements, var22_filter_elements)));
				current = com.altova.functions.Core.resultDocument(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("sopInstanceUID", ""), ((com.altova.mapforce.IMFNode)(var8_filter_elements.current()))))), "."), com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(var12_create_qname, ((com.altova.mapforce.IMFNode)(var3_filter_elements.current())))))), "UTF-8", var29_create_element_with_prefix);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq1_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq1_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq1_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq1_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq2_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq2_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq2_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq2_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq2_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{}DICOMImageReference"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq3_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
		javax.xml.namespace.QName var3_create_qname;
		javax.xml.namespace.QName var4_create_qname;
		javax.xml.namespace.QName var5_create_qname;
		java.lang.String var6_cast;
		javax.xml.namespace.QName var7_create_qname;
		com.altova.mapforce.IMFNode var8_cur_filter_elements;
		javax.xml.namespace.QName var9_create_qname;
		javax.xml.namespace.QName var10_create_qname;
		javax.xml.namespace.QName var11_create_qname;
		com.altova.mapforce.IEnumerable var12_filter_attributes;
		javax.xml.namespace.QName var13_create_qname;
		boolean var14_exists;
		com.altova.mapforce.IEnumerable var15_filter_elements;
		com.altova.mapforce.IEnumerable var16_filter_attributes;
		javax.xml.namespace.QName var17_create_qname;
		com.altova.mapforce.IMFNode var18_cur_filter_elements;
		com.altova.mapforce.IMFNode var19_filter_elements;
		javax.xml.namespace.QName var20_create_qname;
		javax.xml.namespace.QName var21_create_qname;
		javax.xml.namespace.QName var22_create_qname;
		com.altova.mapforce.IMFNode var23_filter_elements;
		com.altova.mapforce.IEnumerable var24_filter_elements;
		com.altova.mapforce.IEnumerable var25_filter_elements;
		com.altova.mapforce.IEnumerable var27_filter_elements;
	
		public seq3_seq_(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements, javax.xml.namespace.QName var3_create_qname, javax.xml.namespace.QName var4_create_qname, javax.xml.namespace.QName var5_create_qname, java.lang.String var6_cast, javax.xml.namespace.QName var7_create_qname, com.altova.mapforce.IMFNode var8_cur_filter_elements, javax.xml.namespace.QName var9_create_qname, javax.xml.namespace.QName var10_create_qname, javax.xml.namespace.QName var11_create_qname, com.altova.mapforce.IEnumerable var12_filter_attributes, javax.xml.namespace.QName var13_create_qname, boolean var14_exists, com.altova.mapforce.IEnumerable var15_filter_elements, com.altova.mapforce.IEnumerable var16_filter_attributes, javax.xml.namespace.QName var17_create_qname, com.altova.mapforce.IMFNode var18_cur_filter_elements, com.altova.mapforce.IMFNode var19_filter_elements, javax.xml.namespace.QName var20_create_qname, javax.xml.namespace.QName var21_create_qname, javax.xml.namespace.QName var22_create_qname, com.altova.mapforce.IMFNode var23_filter_elements, com.altova.mapforce.IEnumerable var24_filter_elements, com.altova.mapforce.IEnumerable var25_filter_elements, com.altova.mapforce.IEnumerable var27_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
			this.var3_create_qname = var3_create_qname;
			this.var4_create_qname = var4_create_qname;
			this.var5_create_qname = var5_create_qname;
			this.var6_cast = var6_cast;
			this.var7_create_qname = var7_create_qname;
			this.var8_cur_filter_elements = var8_cur_filter_elements;
			this.var9_create_qname = var9_create_qname;
			this.var10_create_qname = var10_create_qname;
			this.var11_create_qname = var11_create_qname;
			this.var12_filter_attributes = var12_filter_attributes;
			this.var13_create_qname = var13_create_qname;
			this.var14_exists = var14_exists;
			this.var15_filter_elements = var15_filter_elements;
			this.var16_filter_attributes = var16_filter_attributes;
			this.var17_create_qname = var17_create_qname;
			this.var18_cur_filter_elements = var18_cur_filter_elements;
			this.var19_filter_elements = var19_filter_elements;
			this.var20_create_qname = var20_create_qname;
			this.var21_create_qname = var21_create_qname;
			this.var22_create_qname = var22_create_qname;
			this.var23_filter_elements = var23_filter_elements;
			this.var24_filter_elements = var24_filter_elements;
			this.var25_filter_elements = var25_filter_elements;
			this.var27_filter_elements = var27_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq3_seq_ closure;
			com.altova.mapforce.IEnumerable var26_filter_elements;
			public Enumerator(seq3_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), "xsi", com.altova.functions.Core.box("gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM C:/workspace_nbia/software/cedaraAIMMapping/map/AIM_v3_rv9_XML.xsd"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var1_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("aimVersion", ""), "", com.altova.functions.Core.box("3.0"));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var3_create_qname, "", com.altova.functions.Core.box("Cedara"));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var4_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.CoreTypes.parseDateTime(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var4_create_qname, closure.var2_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var5_create_qname, "", com.altova.functions.Core.box(closure.var6_cast));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var7_create_qname, "", com.altova.functions.Core.box(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("sopInstanceUID", ""), closure.var8_cur_filter_elements))), "."), com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var7_create_qname, closure.var2_cur_filter_elements))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var9_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var9_create_qname, closure.var2_cur_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var10_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var10_create_qname, closure.var2_cur_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var11_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var11_create_qname, closure.var2_cur_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 14;				
				if (!(com.altova.functions.Core.exists(closure.var12_filter_attributes))) {state = 14; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var13_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var12_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("user", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", com.altova.functions.Core.box(com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("User", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq4_seq_(closure.var14_exists, closure.var15_filter_elements, closure.var1_create_qname, closure.var16_filter_attributes, closure.var5_create_qname, closure.var15_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 16;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("imageReferenceCollection", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", com.altova.functions.Core.box(com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("ImageReference", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq5_seq_(closure.var17_create_qname, closure.var1_create_qname, closure.var18_cur_filter_elements, closure.var19_filter_elements, closure.var20_create_qname, closure.var21_create_qname, closure.var22_create_qname, closure.var23_filter_elements, closure.var8_cur_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 17;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("geometricShapeCollection", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq8_cond_seq_(closure.var24_filter_elements, closure.var17_create_qname, closure.var1_create_qname, closure.var17_create_qname, closure.var1_create_qname, closure.var17_create_qname, closure.var1_create_qname, closure.var17_create_qname, closure.var1_create_qname, closure.var17_create_qname, closure.var1_create_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 20;				
				if (!(com.altova.functions.Core.exists(closure.var25_filter_elements))) {state = 20; return false; }
				var26_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Person", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var25_filter_elements)));
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("person", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq44_cond_create_element_with_prefix(var26_filter_elements)));
				pos++;
				return true;
			}
			private boolean moveNext_20() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.exists(closure.var27_filter_elements))) {state = 0; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("textAnnotationCollection", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq45_map_filter_elements(closure.var27_filter_elements, closure.var1_create_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq4_seq_ implements IEnumerable
	{
		boolean var1_exists;
		com.altova.mapforce.IEnumerable var2_filter_elements;
		javax.xml.namespace.QName var4_create_qname;
		com.altova.mapforce.IEnumerable var5_filter_attributes;
		javax.xml.namespace.QName var6_create_qname;
		com.altova.mapforce.IEnumerable var7_filter_elements;
	
		public seq4_seq_(boolean var1_exists, com.altova.mapforce.IEnumerable var2_filter_elements, javax.xml.namespace.QName var4_create_qname, com.altova.mapforce.IEnumerable var5_filter_attributes, javax.xml.namespace.QName var6_create_qname, com.altova.mapforce.IEnumerable var7_filter_elements)
		{
			this.var1_exists = var1_exists;
			this.var2_filter_elements = var2_filter_elements;
			this.var4_create_qname = var4_create_qname;
			this.var5_filter_attributes = var5_filter_attributes;
			this.var6_create_qname = var6_create_qname;
			this.var7_filter_elements = var7_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq4_seq_ closure;
			com.altova.mapforce.IEnumerable var3_filter_elements;
			com.altova.mapforce.IEnumerable var8_filter_elements;
			javax.xml.namespace.QName var9_create_qname;
			javax.xml.namespace.QName var10_create_qname;
			javax.xml.namespace.QName var11_create_qname;
			com.altova.mapforce.IMFNode var12_filter_elements;
			com.altova.mapforce.IEnumerable var13_filter_attributes;
			com.altova.mapforce.IEnumerable var14_filter_attributes;
			public Enumerator(seq4_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 6;				
				if (!(closure.var1_exists)) {state = 6; return false; }
				var3_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("User", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var2_filter_elements)));
				if (!(com.altova.functions.Core.exists(var3_filter_elements))) {state = 6; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var4_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var4_create_qname, (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var3_filter_elements))))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 9;				
				if (!(com.altova.functions.Core.exists(closure.var5_filter_attributes))) {state = 9; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var6_create_qname, "", com.altova.functions.Core.box(com.altova.functions.Core.substringAfter(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var5_filter_attributes)), "@")));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				if (!(closure.var1_exists)) {state = 0; return false; }
				var8_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("User", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var7_filter_elements)));
				if (!(com.altova.functions.Core.exists(var8_filter_elements))) {state = 0; return false; }
				var9_create_qname = com.altova.functions.Core.createQName("numberWithinRoleOfClinicalTrial", "");
				var10_create_qname = com.altova.functions.Core.createQName("roleInTrial", "");
				var11_create_qname = com.altova.functions.Core.createQName("loginName", "");
				var12_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var8_filter_elements);
				var13_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var9_create_qname, var12_filter_elements));
				var14_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var10_create_qname, var12_filter_elements));
				current = com.altova.functions.Core.createAttributeWithPrefix(var11_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(var11_create_qname, var12_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 15;				
				if (!(com.altova.functions.Core.exists(var14_filter_attributes))) {state = 15; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(var10_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var14_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.exists(var13_filter_attributes))) {state = 0; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(var9_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var13_filter_attributes))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq5_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		javax.xml.namespace.QName var2_create_qname;
		com.altova.mapforce.IMFNode var3_cur_filter_elements;
		com.altova.mapforce.IMFNode var4_filter_elements;
		javax.xml.namespace.QName var5_create_qname;
		javax.xml.namespace.QName var6_create_qname;
		javax.xml.namespace.QName var7_create_qname;
		com.altova.mapforce.IMFNode var8_filter_elements;
		com.altova.mapforce.IMFNode var9_cur_filter_elements;
	
		public seq5_seq_(javax.xml.namespace.QName var1_create_qname, javax.xml.namespace.QName var2_create_qname, com.altova.mapforce.IMFNode var3_cur_filter_elements, com.altova.mapforce.IMFNode var4_filter_elements, javax.xml.namespace.QName var5_create_qname, javax.xml.namespace.QName var6_create_qname, javax.xml.namespace.QName var7_create_qname, com.altova.mapforce.IMFNode var8_filter_elements, com.altova.mapforce.IMFNode var9_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_create_qname = var2_create_qname;
			this.var3_cur_filter_elements = var3_cur_filter_elements;
			this.var4_filter_elements = var4_filter_elements;
			this.var5_create_qname = var5_create_qname;
			this.var6_create_qname = var6_create_qname;
			this.var7_create_qname = var7_create_qname;
			this.var8_filter_elements = var8_filter_elements;
			this.var9_cur_filter_elements = var9_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq5_seq_ closure;
			public Enumerator(seq5_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(closure.var1_create_qname, com.altova.functions.Core.box(com.altova.functions.Lang.stringAsQName("{gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM}DICOMImageReference")));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var2_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var2_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("imageStudy", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", com.altova.functions.Core.box(com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("ImageStudy", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq6_seq_(closure.var2_create_qname, closure.var4_filter_elements, closure.var5_create_qname, closure.var6_create_qname, closure.var7_create_qname, closure.var8_filter_elements, closure.var9_cur_filter_elements)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq6_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_filter_elements;
		javax.xml.namespace.QName var3_create_qname;
		javax.xml.namespace.QName var4_create_qname;
		javax.xml.namespace.QName var5_create_qname;
		com.altova.mapforce.IMFNode var6_filter_elements;
		com.altova.mapforce.IMFNode var7_cur_filter_elements;
	
		public seq6_seq_(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_filter_elements, javax.xml.namespace.QName var3_create_qname, javax.xml.namespace.QName var4_create_qname, javax.xml.namespace.QName var5_create_qname, com.altova.mapforce.IMFNode var6_filter_elements, com.altova.mapforce.IMFNode var7_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_filter_elements = var2_filter_elements;
			this.var3_create_qname = var3_create_qname;
			this.var4_create_qname = var4_create_qname;
			this.var5_create_qname = var5_create_qname;
			this.var6_filter_elements = var6_filter_elements;
			this.var7_cur_filter_elements = var7_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq6_seq_ closure;
			public Enumerator(seq6_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var1_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var3_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var3_create_qname, closure.var2_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var4_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.CoreTypes.parseDateTime(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var4_create_qname, closure.var2_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var5_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var5_create_qname, closure.var2_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("imageSeries", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", com.altova.functions.Core.box(com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("ImageSeries", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq7_seq_(closure.var1_create_qname, closure.var6_filter_elements, closure.var3_create_qname, closure.var7_cur_filter_elements)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq7_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_filter_elements;
		javax.xml.namespace.QName var3_create_qname;
		com.altova.mapforce.IMFNode var4_cur_filter_elements;
	
		public seq7_seq_(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_filter_elements, javax.xml.namespace.QName var3_create_qname, com.altova.mapforce.IMFNode var4_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_filter_elements = var2_filter_elements;
			this.var3_create_qname = var3_create_qname;
			this.var4_cur_filter_elements = var4_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq7_seq_ closure;
			public Enumerator(seq7_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var1_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var3_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var3_create_qname, closure.var2_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("imageCollection", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", com.altova.functions.Core.box(com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("Image", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", com.mapforce.tbf.tbf1_Image.create(closure.var4_cur_filter_elements))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq8_cond_seq_ implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements;
		javax.xml.namespace.QName var4_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		javax.xml.namespace.QName var17_create_qname;
		javax.xml.namespace.QName var28_create_qname;
		javax.xml.namespace.QName var30_create_qname;
		javax.xml.namespace.QName var41_create_qname;
		javax.xml.namespace.QName var43_create_qname;
		javax.xml.namespace.QName var54_create_qname;
		javax.xml.namespace.QName var56_create_qname;
		javax.xml.namespace.QName var67_create_qname;
	
		public seq8_cond_seq_(com.altova.mapforce.IEnumerable var1_filter_elements, javax.xml.namespace.QName var4_create_qname, javax.xml.namespace.QName var15_create_qname, javax.xml.namespace.QName var17_create_qname, javax.xml.namespace.QName var28_create_qname, javax.xml.namespace.QName var30_create_qname, javax.xml.namespace.QName var41_create_qname, javax.xml.namespace.QName var43_create_qname, javax.xml.namespace.QName var54_create_qname, javax.xml.namespace.QName var56_create_qname, javax.xml.namespace.QName var67_create_qname)
		{
			this.var1_filter_elements = var1_filter_elements;
			this.var4_create_qname = var4_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var17_create_qname = var17_create_qname;
			this.var28_create_qname = var28_create_qname;
			this.var30_create_qname = var30_create_qname;
			this.var41_create_qname = var41_create_qname;
			this.var43_create_qname = var43_create_qname;
			this.var54_create_qname = var54_create_qname;
			this.var56_create_qname = var56_create_qname;
			this.var67_create_qname = var67_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq8_cond_seq_ closure;
			com.altova.mapforce.IEnumerable var2_filter_elements;
			IEnumerator var3_filter_elements;
			IEnumerator var16_filter_elements;
			javax.xml.namespace.QName var5_create_qname;
			javax.xml.namespace.QName var6_create_qname;
			IEnumerator var29_filter_elements;
			javax.xml.namespace.QName var7_create_qname;
			javax.xml.namespace.QName var18_create_qname;
			javax.xml.namespace.QName var8_create_qname;
			javax.xml.namespace.QName var19_create_qname;
			IEnumerator var42_filter_elements;
			javax.xml.namespace.QName var9_create_qname;
			javax.xml.namespace.QName var20_create_qname;
			javax.xml.namespace.QName var31_create_qname;
			IEnumerator var55_filter_elements;
			javax.xml.namespace.QName var10_create_qname;
			javax.xml.namespace.QName var21_create_qname;
			javax.xml.namespace.QName var32_create_qname;
			com.altova.mapforce.IEnumerable var11_filter_attributes;
			javax.xml.namespace.QName var33_create_qname;
			javax.xml.namespace.QName var22_create_qname;
			javax.xml.namespace.QName var44_create_qname;
			com.altova.mapforce.IEnumerable var12_filter_attributes;
			javax.xml.namespace.QName var23_create_qname;
			javax.xml.namespace.QName var34_create_qname;
			javax.xml.namespace.QName var45_create_qname;
			com.altova.mapforce.IEnumerable var13_filter_attributes;
			com.altova.mapforce.IEnumerable var24_filter_attributes;
			javax.xml.namespace.QName var35_create_qname;
			javax.xml.namespace.QName var46_create_qname;
			javax.xml.namespace.QName var57_create_qname;
			com.altova.mapforce.IEnumerable var25_filter_attributes;
			javax.xml.namespace.QName var36_create_qname;
			javax.xml.namespace.QName var47_create_qname;
			com.altova.mapforce.IEnumerable var14_filter_attributes;
			javax.xml.namespace.QName var58_create_qname;
			com.altova.mapforce.IEnumerable var26_filter_attributes;
			javax.xml.namespace.QName var48_create_qname;
			javax.xml.namespace.QName var59_create_qname;
			com.altova.mapforce.IEnumerable var37_filter_attributes;
			com.altova.mapforce.IEnumerable var38_filter_attributes;
			com.altova.mapforce.IEnumerable var27_filter_attributes;
			javax.xml.namespace.QName var49_create_qname;
			javax.xml.namespace.QName var60_create_qname;
			com.altova.mapforce.IEnumerable var39_filter_attributes;
			com.altova.mapforce.IEnumerable var50_filter_attributes;
			javax.xml.namespace.QName var61_create_qname;
			com.altova.mapforce.IEnumerable var40_filter_attributes;
			com.altova.mapforce.IEnumerable var51_filter_attributes;
			javax.xml.namespace.QName var62_create_qname;
			com.altova.mapforce.IEnumerable var52_filter_attributes;
			com.altova.mapforce.IEnumerable var63_filter_attributes;
			com.altova.mapforce.IEnumerable var53_filter_attributes;
			com.altova.mapforce.IEnumerable var64_filter_attributes;
			com.altova.mapforce.IEnumerable var65_filter_attributes;
			com.altova.mapforce.IEnumerable var66_filter_attributes;
			public Enumerator(seq8_cond_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.exists(closure.var1_filter_elements))) {state = 0; return false; }
				var2_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("GeometricShape", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_filter_elements)));
				var3_filter_elements = (var2_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter_elements.moveNext()) {state = 4; return false; }
				if (!(com.altova.functions.Core.exists((new seq9_map_map_filter_attributes(closure.var4_create_qname, ((com.altova.mapforce.IMFNode)(var3_filter_elements.current()))))))) {state = 3; return false; }
				var5_create_qname = com.altova.functions.Core.createQName("lineThickness", "");
				var6_create_qname = com.altova.functions.Core.createQName("shapeIdentifier", "");
				var7_create_qname = com.altova.functions.Core.createQName("lineStyle", "");
				var8_create_qname = com.altova.functions.Core.createQName("lineOpacity", "");
				var9_create_qname = com.altova.functions.Core.createQName("includeFlag", "");
				var10_create_qname = com.altova.functions.Core.createQName("lineColor", "");
				var11_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var8_create_qname, ((com.altova.mapforce.IMFNode)(var3_filter_elements.current()))));
				var12_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var7_create_qname, ((com.altova.mapforce.IMFNode)(var3_filter_elements.current()))));
				var13_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var10_create_qname, ((com.altova.mapforce.IMFNode)(var3_filter_elements.current()))));
				var14_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var5_create_qname, ((com.altova.mapforce.IMFNode)(var3_filter_elements.current()))));
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("GeometricShape", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq11_seq_(closure.var4_create_qname, closure.var15_create_qname, ((com.altova.mapforce.IMFNode)(var3_filter_elements.current())), var13_filter_attributes, var10_create_qname, var11_filter_attributes, var8_create_qname, var12_filter_attributes, var7_create_qname, var14_filter_attributes, var5_create_qname, var9_create_qname, var6_create_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				var16_filter_elements = (var2_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var16_filter_elements.moveNext()) {state = 9; return false; }
				if (!(com.altova.functions.Core.exists((new seq16_map_map_filter_attributes(closure.var17_create_qname, ((com.altova.mapforce.IMFNode)(var16_filter_elements.current()))))))) {state = 8; return false; }
				var18_create_qname = com.altova.functions.Core.createQName("lineThickness", "");
				var19_create_qname = com.altova.functions.Core.createQName("shapeIdentifier", "");
				var20_create_qname = com.altova.functions.Core.createQName("lineStyle", "");
				var21_create_qname = com.altova.functions.Core.createQName("lineOpacity", "");
				var22_create_qname = com.altova.functions.Core.createQName("includeFlag", "");
				var23_create_qname = com.altova.functions.Core.createQName("lineColor", "");
				var24_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var18_create_qname, ((com.altova.mapforce.IMFNode)(var16_filter_elements.current()))));
				var25_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var21_create_qname, ((com.altova.mapforce.IMFNode)(var16_filter_elements.current()))));
				var26_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var20_create_qname, ((com.altova.mapforce.IMFNode)(var16_filter_elements.current()))));
				var27_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var23_create_qname, ((com.altova.mapforce.IMFNode)(var16_filter_elements.current()))));
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("GeometricShape", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq18_seq_(closure.var17_create_qname, closure.var28_create_qname, ((com.altova.mapforce.IMFNode)(var16_filter_elements.current())), var27_filter_attributes, var23_create_qname, var25_filter_attributes, var21_create_qname, var26_filter_attributes, var20_create_qname, var24_filter_attributes, var18_create_qname, var22_create_qname, var19_create_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				var29_filter_elements = (var2_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var29_filter_elements.moveNext()) {state = 14; return false; }
				if (!(com.altova.functions.Core.exists((new seq23_map_map_filter_attributes(closure.var30_create_qname, ((com.altova.mapforce.IMFNode)(var29_filter_elements.current()))))))) {state = 13; return false; }
				var31_create_qname = com.altova.functions.Core.createQName("lineThickness", "");
				var32_create_qname = com.altova.functions.Core.createQName("shapeIdentifier", "");
				var33_create_qname = com.altova.functions.Core.createQName("lineStyle", "");
				var34_create_qname = com.altova.functions.Core.createQName("lineOpacity", "");
				var35_create_qname = com.altova.functions.Core.createQName("includeFlag", "");
				var36_create_qname = com.altova.functions.Core.createQName("lineColor", "");
				var37_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var36_create_qname, ((com.altova.mapforce.IMFNode)(var29_filter_elements.current()))));
				var38_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var31_create_qname, ((com.altova.mapforce.IMFNode)(var29_filter_elements.current()))));
				var39_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var34_create_qname, ((com.altova.mapforce.IMFNode)(var29_filter_elements.current()))));
				var40_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var33_create_qname, ((com.altova.mapforce.IMFNode)(var29_filter_elements.current()))));
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("GeometricShape", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq25_seq_(closure.var30_create_qname, closure.var41_create_qname, ((com.altova.mapforce.IMFNode)(var29_filter_elements.current())), var37_filter_attributes, var36_create_qname, var39_filter_attributes, var34_create_qname, var40_filter_attributes, var33_create_qname, var38_filter_attributes, var31_create_qname, var35_create_qname, var32_create_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 18;				
				var42_filter_elements = (var2_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var42_filter_elements.moveNext()) {state = 19; return false; }
				if (!(com.altova.functions.Core.exists((new seq30_map_map_filter_attributes(closure.var43_create_qname, ((com.altova.mapforce.IMFNode)(var42_filter_elements.current()))))))) {state = 18; return false; }
				var44_create_qname = com.altova.functions.Core.createQName("lineThickness", "");
				var45_create_qname = com.altova.functions.Core.createQName("shapeIdentifier", "");
				var46_create_qname = com.altova.functions.Core.createQName("lineStyle", "");
				var47_create_qname = com.altova.functions.Core.createQName("lineOpacity", "");
				var48_create_qname = com.altova.functions.Core.createQName("includeFlag", "");
				var49_create_qname = com.altova.functions.Core.createQName("lineColor", "");
				var50_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var44_create_qname, ((com.altova.mapforce.IMFNode)(var42_filter_elements.current()))));
				var51_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var46_create_qname, ((com.altova.mapforce.IMFNode)(var42_filter_elements.current()))));
				var52_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var47_create_qname, ((com.altova.mapforce.IMFNode)(var42_filter_elements.current()))));
				var53_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var49_create_qname, ((com.altova.mapforce.IMFNode)(var42_filter_elements.current()))));
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("GeometricShape", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq32_seq_(closure.var43_create_qname, closure.var54_create_qname, ((com.altova.mapforce.IMFNode)(var42_filter_elements.current())), var53_filter_attributes, var49_create_qname, var52_filter_attributes, var47_create_qname, var51_filter_attributes, var46_create_qname, var50_filter_attributes, var44_create_qname, var48_create_qname, var45_create_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 23;				
				var55_filter_elements = (var2_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 23;				
				if (!var55_filter_elements.moveNext()) {state = 0; return false; }
				if (!(com.altova.functions.Core.exists((new seq37_map_map_filter_attributes(closure.var56_create_qname, ((com.altova.mapforce.IMFNode)(var55_filter_elements.current()))))))) {state = 23; return false; }
				var57_create_qname = com.altova.functions.Core.createQName("lineThickness", "");
				var58_create_qname = com.altova.functions.Core.createQName("shapeIdentifier", "");
				var59_create_qname = com.altova.functions.Core.createQName("lineStyle", "");
				var60_create_qname = com.altova.functions.Core.createQName("lineOpacity", "");
				var61_create_qname = com.altova.functions.Core.createQName("includeFlag", "");
				var62_create_qname = com.altova.functions.Core.createQName("lineColor", "");
				var63_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var57_create_qname, ((com.altova.mapforce.IMFNode)(var55_filter_elements.current()))));
				var64_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var60_create_qname, ((com.altova.mapforce.IMFNode)(var55_filter_elements.current()))));
				var65_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var59_create_qname, ((com.altova.mapforce.IMFNode)(var55_filter_elements.current()))));
				var66_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var62_create_qname, ((com.altova.mapforce.IMFNode)(var55_filter_elements.current()))));
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("GeometricShape", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq39_seq_(closure.var56_create_qname, closure.var67_create_qname, ((com.altova.mapforce.IMFNode)(var55_filter_elements.current())), var66_filter_attributes, var62_create_qname, var64_filter_attributes, var60_create_qname, var65_filter_attributes, var59_create_qname, var63_filter_attributes, var57_create_qname, var61_create_qname, var58_create_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq9_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq9_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq9_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq9_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq10_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq10_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq10_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq10_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq10_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{}Circle"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq11_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		javax.xml.namespace.QName var2_create_qname;
		com.altova.mapforce.IMFNode var3_cur_filter_elements;
		com.altova.mapforce.IEnumerable var4_filter_attributes;
		javax.xml.namespace.QName var5_create_qname;
		com.altova.mapforce.IEnumerable var6_filter_attributes;
		javax.xml.namespace.QName var7_create_qname;
		com.altova.mapforce.IEnumerable var8_filter_attributes;
		javax.xml.namespace.QName var9_create_qname;
		com.altova.mapforce.IEnumerable var10_filter_attributes;
		javax.xml.namespace.QName var11_create_qname;
		javax.xml.namespace.QName var12_create_qname;
		javax.xml.namespace.QName var13_create_qname;
	
		public seq11_seq_(javax.xml.namespace.QName var1_create_qname, javax.xml.namespace.QName var2_create_qname, com.altova.mapforce.IMFNode var3_cur_filter_elements, com.altova.mapforce.IEnumerable var4_filter_attributes, javax.xml.namespace.QName var5_create_qname, com.altova.mapforce.IEnumerable var6_filter_attributes, javax.xml.namespace.QName var7_create_qname, com.altova.mapforce.IEnumerable var8_filter_attributes, javax.xml.namespace.QName var9_create_qname, com.altova.mapforce.IEnumerable var10_filter_attributes, javax.xml.namespace.QName var11_create_qname, javax.xml.namespace.QName var12_create_qname, javax.xml.namespace.QName var13_create_qname)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_create_qname = var2_create_qname;
			this.var3_cur_filter_elements = var3_cur_filter_elements;
			this.var4_filter_attributes = var4_filter_attributes;
			this.var5_create_qname = var5_create_qname;
			this.var6_filter_attributes = var6_filter_attributes;
			this.var7_create_qname = var7_create_qname;
			this.var8_filter_attributes = var8_filter_attributes;
			this.var9_create_qname = var9_create_qname;
			this.var10_filter_attributes = var10_filter_attributes;
			this.var11_create_qname = var11_create_qname;
			this.var12_create_qname = var12_create_qname;
			this.var13_create_qname = var13_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq11_seq_ closure;
			public Enumerator(seq11_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(closure.var1_create_qname, com.altova.functions.Core.box(com.altova.functions.Lang.stringAsQName("{gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM}Circle")));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var2_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var2_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 6;				
				if (!(com.altova.functions.Core.exists(closure.var4_filter_attributes))) {state = 6; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var5_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var4_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 9;				
				if (!(com.altova.functions.Core.exists(closure.var6_filter_attributes))) {state = 9; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var7_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var6_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				if (!(com.altova.functions.Core.exists(closure.var8_filter_attributes))) {state = 12; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var9_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var8_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 15;				
				if (!(com.altova.functions.Core.exists(closure.var10_filter_attributes))) {state = 15; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var11_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var10_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 16;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var12_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var12_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 17;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var13_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var13_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("spatialCoordinateCollection", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq12_map_filter_elements(closure.var3_cur_filter_elements, closure.var1_create_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq12_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
		javax.xml.namespace.QName var3_create_qname;
	
		public seq12_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements, javax.xml.namespace.QName var3_create_qname)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
			this.var3_create_qname = var3_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq12_map_filter_elements closure;
			IEnumerator var2_filter_elements;
			public Enumerator(seq12_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("SpatialCoordinate", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("spatialCoordinateCollection", ""), closure.var1_cur_filter_elements)))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements.moveNext()) {state = 0; return false; }
				if (!(com.altova.functions.Core.exists((new seq13_map_map_filter_attributes(closure.var3_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current()))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("SpatialCoordinate", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq15_seq_(closure.var3_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current())))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq13_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq13_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq13_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq13_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq14_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq14_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq14_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq14_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq14_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{}TwoDimensionSpatialCoordinate"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq15_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq15_seq_(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq15_seq_ closure;
			IEnumerator var3_tbf2_TwoDimensionSpatialCoordinate;
			public Enumerator(seq15_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(closure.var1_create_qname, com.altova.functions.Core.box(com.altova.functions.Lang.stringAsQName("{gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM}TwoDimensionSpatialCoordinate")));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_tbf2_TwoDimensionSpatialCoordinate = (com.mapforce.tbf.tbf2_TwoDimensionSpatialCoordinate.create(closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_tbf2_TwoDimensionSpatialCoordinate.moveNext()) {state = 0; return false; }
				current = var3_tbf2_TwoDimensionSpatialCoordinate.current();
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq16_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq16_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq16_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq16_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq17_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq17_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq17_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq17_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq17_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{}Ellipse"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq18_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		javax.xml.namespace.QName var2_create_qname;
		com.altova.mapforce.IMFNode var3_cur_filter_elements;
		com.altova.mapforce.IEnumerable var4_filter_attributes;
		javax.xml.namespace.QName var5_create_qname;
		com.altova.mapforce.IEnumerable var6_filter_attributes;
		javax.xml.namespace.QName var7_create_qname;
		com.altova.mapforce.IEnumerable var8_filter_attributes;
		javax.xml.namespace.QName var9_create_qname;
		com.altova.mapforce.IEnumerable var10_filter_attributes;
		javax.xml.namespace.QName var11_create_qname;
		javax.xml.namespace.QName var12_create_qname;
		javax.xml.namespace.QName var13_create_qname;
	
		public seq18_seq_(javax.xml.namespace.QName var1_create_qname, javax.xml.namespace.QName var2_create_qname, com.altova.mapforce.IMFNode var3_cur_filter_elements, com.altova.mapforce.IEnumerable var4_filter_attributes, javax.xml.namespace.QName var5_create_qname, com.altova.mapforce.IEnumerable var6_filter_attributes, javax.xml.namespace.QName var7_create_qname, com.altova.mapforce.IEnumerable var8_filter_attributes, javax.xml.namespace.QName var9_create_qname, com.altova.mapforce.IEnumerable var10_filter_attributes, javax.xml.namespace.QName var11_create_qname, javax.xml.namespace.QName var12_create_qname, javax.xml.namespace.QName var13_create_qname)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_create_qname = var2_create_qname;
			this.var3_cur_filter_elements = var3_cur_filter_elements;
			this.var4_filter_attributes = var4_filter_attributes;
			this.var5_create_qname = var5_create_qname;
			this.var6_filter_attributes = var6_filter_attributes;
			this.var7_create_qname = var7_create_qname;
			this.var8_filter_attributes = var8_filter_attributes;
			this.var9_create_qname = var9_create_qname;
			this.var10_filter_attributes = var10_filter_attributes;
			this.var11_create_qname = var11_create_qname;
			this.var12_create_qname = var12_create_qname;
			this.var13_create_qname = var13_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq18_seq_ closure;
			public Enumerator(seq18_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(closure.var1_create_qname, com.altova.functions.Core.box(com.altova.functions.Lang.stringAsQName("{gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM}Ellipse")));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var2_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var2_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 6;				
				if (!(com.altova.functions.Core.exists(closure.var4_filter_attributes))) {state = 6; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var5_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var4_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 9;				
				if (!(com.altova.functions.Core.exists(closure.var6_filter_attributes))) {state = 9; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var7_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var6_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				if (!(com.altova.functions.Core.exists(closure.var8_filter_attributes))) {state = 12; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var9_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var8_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 15;				
				if (!(com.altova.functions.Core.exists(closure.var10_filter_attributes))) {state = 15; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var11_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var10_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 16;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var12_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var12_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 17;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var13_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var13_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("spatialCoordinateCollection", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq19_map_filter_elements(closure.var3_cur_filter_elements, closure.var1_create_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq19_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
		javax.xml.namespace.QName var3_create_qname;
	
		public seq19_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements, javax.xml.namespace.QName var3_create_qname)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
			this.var3_create_qname = var3_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq19_map_filter_elements closure;
			IEnumerator var2_filter_elements;
			public Enumerator(seq19_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("SpatialCoordinate", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("spatialCoordinateCollection", ""), closure.var1_cur_filter_elements)))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements.moveNext()) {state = 0; return false; }
				if (!(com.altova.functions.Core.exists((new seq20_map_map_filter_attributes(closure.var3_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current()))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("SpatialCoordinate", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq22_seq_(closure.var3_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current())))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq20_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq20_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq20_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq20_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq21_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq21_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq21_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq21_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq21_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{}TwoDimensionSpatialCoordinate"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq22_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq22_seq_(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq22_seq_ closure;
			IEnumerator var3_tbf2_TwoDimensionSpatialCoordinate;
			public Enumerator(seq22_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(closure.var1_create_qname, com.altova.functions.Core.box(com.altova.functions.Lang.stringAsQName("{gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM}TwoDimensionSpatialCoordinate")));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_tbf2_TwoDimensionSpatialCoordinate = (com.mapforce.tbf.tbf2_TwoDimensionSpatialCoordinate.create(closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_tbf2_TwoDimensionSpatialCoordinate.moveNext()) {state = 0; return false; }
				current = var3_tbf2_TwoDimensionSpatialCoordinate.current();
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq23_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq23_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq23_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq23_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq24_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq24_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq24_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq24_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq24_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{}MultiPoint"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq25_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		javax.xml.namespace.QName var2_create_qname;
		com.altova.mapforce.IMFNode var3_cur_filter_elements;
		com.altova.mapforce.IEnumerable var4_filter_attributes;
		javax.xml.namespace.QName var5_create_qname;
		com.altova.mapforce.IEnumerable var6_filter_attributes;
		javax.xml.namespace.QName var7_create_qname;
		com.altova.mapforce.IEnumerable var8_filter_attributes;
		javax.xml.namespace.QName var9_create_qname;
		com.altova.mapforce.IEnumerable var10_filter_attributes;
		javax.xml.namespace.QName var11_create_qname;
		javax.xml.namespace.QName var12_create_qname;
		javax.xml.namespace.QName var13_create_qname;
	
		public seq25_seq_(javax.xml.namespace.QName var1_create_qname, javax.xml.namespace.QName var2_create_qname, com.altova.mapforce.IMFNode var3_cur_filter_elements, com.altova.mapforce.IEnumerable var4_filter_attributes, javax.xml.namespace.QName var5_create_qname, com.altova.mapforce.IEnumerable var6_filter_attributes, javax.xml.namespace.QName var7_create_qname, com.altova.mapforce.IEnumerable var8_filter_attributes, javax.xml.namespace.QName var9_create_qname, com.altova.mapforce.IEnumerable var10_filter_attributes, javax.xml.namespace.QName var11_create_qname, javax.xml.namespace.QName var12_create_qname, javax.xml.namespace.QName var13_create_qname)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_create_qname = var2_create_qname;
			this.var3_cur_filter_elements = var3_cur_filter_elements;
			this.var4_filter_attributes = var4_filter_attributes;
			this.var5_create_qname = var5_create_qname;
			this.var6_filter_attributes = var6_filter_attributes;
			this.var7_create_qname = var7_create_qname;
			this.var8_filter_attributes = var8_filter_attributes;
			this.var9_create_qname = var9_create_qname;
			this.var10_filter_attributes = var10_filter_attributes;
			this.var11_create_qname = var11_create_qname;
			this.var12_create_qname = var12_create_qname;
			this.var13_create_qname = var13_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq25_seq_ closure;
			public Enumerator(seq25_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(closure.var1_create_qname, com.altova.functions.Core.box(com.altova.functions.Lang.stringAsQName("{gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM}MultiPoint")));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var2_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var2_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 6;				
				if (!(com.altova.functions.Core.exists(closure.var4_filter_attributes))) {state = 6; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var5_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var4_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 9;				
				if (!(com.altova.functions.Core.exists(closure.var6_filter_attributes))) {state = 9; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var7_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var6_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				if (!(com.altova.functions.Core.exists(closure.var8_filter_attributes))) {state = 12; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var9_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var8_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 15;				
				if (!(com.altova.functions.Core.exists(closure.var10_filter_attributes))) {state = 15; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var11_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var10_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 16;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var12_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var12_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 17;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var13_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var13_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("spatialCoordinateCollection", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq26_map_filter_elements(closure.var3_cur_filter_elements, closure.var1_create_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq26_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
		javax.xml.namespace.QName var3_create_qname;
	
		public seq26_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements, javax.xml.namespace.QName var3_create_qname)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
			this.var3_create_qname = var3_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq26_map_filter_elements closure;
			IEnumerator var2_filter_elements;
			public Enumerator(seq26_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("SpatialCoordinate", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("spatialCoordinateCollection", ""), closure.var1_cur_filter_elements)))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements.moveNext()) {state = 0; return false; }
				if (!(com.altova.functions.Core.exists((new seq27_map_map_filter_attributes(closure.var3_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current()))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("SpatialCoordinate", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq29_seq_(closure.var3_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current())))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq27_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq27_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq27_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq27_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq28_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq28_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq28_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq28_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq28_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{}TwoDimensionSpatialCoordinate"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq29_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq29_seq_(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq29_seq_ closure;
			IEnumerator var3_tbf2_TwoDimensionSpatialCoordinate;
			public Enumerator(seq29_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(closure.var1_create_qname, com.altova.functions.Core.box(com.altova.functions.Lang.stringAsQName("{gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM}TwoDimensionSpatialCoordinate")));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_tbf2_TwoDimensionSpatialCoordinate = (com.mapforce.tbf.tbf2_TwoDimensionSpatialCoordinate.create(closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_tbf2_TwoDimensionSpatialCoordinate.moveNext()) {state = 0; return false; }
				current = var3_tbf2_TwoDimensionSpatialCoordinate.current();
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq30_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq30_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq30_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq30_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq31_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq31_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq31_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq31_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq31_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{}Point"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq32_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		javax.xml.namespace.QName var2_create_qname;
		com.altova.mapforce.IMFNode var3_cur_filter_elements;
		com.altova.mapforce.IEnumerable var4_filter_attributes;
		javax.xml.namespace.QName var5_create_qname;
		com.altova.mapforce.IEnumerable var6_filter_attributes;
		javax.xml.namespace.QName var7_create_qname;
		com.altova.mapforce.IEnumerable var8_filter_attributes;
		javax.xml.namespace.QName var9_create_qname;
		com.altova.mapforce.IEnumerable var10_filter_attributes;
		javax.xml.namespace.QName var11_create_qname;
		javax.xml.namespace.QName var12_create_qname;
		javax.xml.namespace.QName var13_create_qname;
	
		public seq32_seq_(javax.xml.namespace.QName var1_create_qname, javax.xml.namespace.QName var2_create_qname, com.altova.mapforce.IMFNode var3_cur_filter_elements, com.altova.mapforce.IEnumerable var4_filter_attributes, javax.xml.namespace.QName var5_create_qname, com.altova.mapforce.IEnumerable var6_filter_attributes, javax.xml.namespace.QName var7_create_qname, com.altova.mapforce.IEnumerable var8_filter_attributes, javax.xml.namespace.QName var9_create_qname, com.altova.mapforce.IEnumerable var10_filter_attributes, javax.xml.namespace.QName var11_create_qname, javax.xml.namespace.QName var12_create_qname, javax.xml.namespace.QName var13_create_qname)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_create_qname = var2_create_qname;
			this.var3_cur_filter_elements = var3_cur_filter_elements;
			this.var4_filter_attributes = var4_filter_attributes;
			this.var5_create_qname = var5_create_qname;
			this.var6_filter_attributes = var6_filter_attributes;
			this.var7_create_qname = var7_create_qname;
			this.var8_filter_attributes = var8_filter_attributes;
			this.var9_create_qname = var9_create_qname;
			this.var10_filter_attributes = var10_filter_attributes;
			this.var11_create_qname = var11_create_qname;
			this.var12_create_qname = var12_create_qname;
			this.var13_create_qname = var13_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq32_seq_ closure;
			public Enumerator(seq32_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(closure.var1_create_qname, com.altova.functions.Core.box(com.altova.functions.Lang.stringAsQName("{gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM}Point")));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var2_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var2_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 6;				
				if (!(com.altova.functions.Core.exists(closure.var4_filter_attributes))) {state = 6; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var5_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var4_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 9;				
				if (!(com.altova.functions.Core.exists(closure.var6_filter_attributes))) {state = 9; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var7_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var6_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				if (!(com.altova.functions.Core.exists(closure.var8_filter_attributes))) {state = 12; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var9_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var8_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 15;				
				if (!(com.altova.functions.Core.exists(closure.var10_filter_attributes))) {state = 15; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var11_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var10_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 16;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var12_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var12_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 17;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var13_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var13_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("spatialCoordinateCollection", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq33_map_filter_elements(closure.var3_cur_filter_elements, closure.var1_create_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq33_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
		javax.xml.namespace.QName var3_create_qname;
	
		public seq33_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements, javax.xml.namespace.QName var3_create_qname)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
			this.var3_create_qname = var3_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq33_map_filter_elements closure;
			IEnumerator var2_filter_elements;
			public Enumerator(seq33_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("SpatialCoordinate", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("spatialCoordinateCollection", ""), closure.var1_cur_filter_elements)))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements.moveNext()) {state = 0; return false; }
				if (!(com.altova.functions.Core.exists((new seq34_map_map_filter_attributes(closure.var3_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current()))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("SpatialCoordinate", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq36_seq_(closure.var3_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current())))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq34_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq34_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq34_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq34_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq35_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq35_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq35_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq35_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq35_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{}TwoDimensionSpatialCoordinate"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq36_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq36_seq_(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq36_seq_ closure;
			IEnumerator var3_tbf2_TwoDimensionSpatialCoordinate;
			public Enumerator(seq36_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(closure.var1_create_qname, com.altova.functions.Core.box(com.altova.functions.Lang.stringAsQName("{gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM}TwoDimensionSpatialCoordinate")));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_tbf2_TwoDimensionSpatialCoordinate = (com.mapforce.tbf.tbf2_TwoDimensionSpatialCoordinate.create(closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_tbf2_TwoDimensionSpatialCoordinate.moveNext()) {state = 0; return false; }
				current = var3_tbf2_TwoDimensionSpatialCoordinate.current();
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq37_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq37_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq37_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq37_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq38_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq38_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq38_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq38_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq38_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{}Polyline"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq39_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		javax.xml.namespace.QName var2_create_qname;
		com.altova.mapforce.IMFNode var3_cur_filter_elements;
		com.altova.mapforce.IEnumerable var4_filter_attributes;
		javax.xml.namespace.QName var5_create_qname;
		com.altova.mapforce.IEnumerable var6_filter_attributes;
		javax.xml.namespace.QName var7_create_qname;
		com.altova.mapforce.IEnumerable var8_filter_attributes;
		javax.xml.namespace.QName var9_create_qname;
		com.altova.mapforce.IEnumerable var10_filter_attributes;
		javax.xml.namespace.QName var11_create_qname;
		javax.xml.namespace.QName var12_create_qname;
		javax.xml.namespace.QName var13_create_qname;
	
		public seq39_seq_(javax.xml.namespace.QName var1_create_qname, javax.xml.namespace.QName var2_create_qname, com.altova.mapforce.IMFNode var3_cur_filter_elements, com.altova.mapforce.IEnumerable var4_filter_attributes, javax.xml.namespace.QName var5_create_qname, com.altova.mapforce.IEnumerable var6_filter_attributes, javax.xml.namespace.QName var7_create_qname, com.altova.mapforce.IEnumerable var8_filter_attributes, javax.xml.namespace.QName var9_create_qname, com.altova.mapforce.IEnumerable var10_filter_attributes, javax.xml.namespace.QName var11_create_qname, javax.xml.namespace.QName var12_create_qname, javax.xml.namespace.QName var13_create_qname)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_create_qname = var2_create_qname;
			this.var3_cur_filter_elements = var3_cur_filter_elements;
			this.var4_filter_attributes = var4_filter_attributes;
			this.var5_create_qname = var5_create_qname;
			this.var6_filter_attributes = var6_filter_attributes;
			this.var7_create_qname = var7_create_qname;
			this.var8_filter_attributes = var8_filter_attributes;
			this.var9_create_qname = var9_create_qname;
			this.var10_filter_attributes = var10_filter_attributes;
			this.var11_create_qname = var11_create_qname;
			this.var12_create_qname = var12_create_qname;
			this.var13_create_qname = var13_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq39_seq_ closure;
			public Enumerator(seq39_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(closure.var1_create_qname, com.altova.functions.Core.box(com.altova.functions.Lang.stringAsQName("{gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM}Polyline")));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var2_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var2_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 6;				
				if (!(com.altova.functions.Core.exists(closure.var4_filter_attributes))) {state = 6; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var5_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var4_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 9;				
				if (!(com.altova.functions.Core.exists(closure.var6_filter_attributes))) {state = 9; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var7_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var6_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				if (!(com.altova.functions.Core.exists(closure.var8_filter_attributes))) {state = 12; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var9_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var8_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 15;				
				if (!(com.altova.functions.Core.exists(closure.var10_filter_attributes))) {state = 15; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var11_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var10_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 16;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var12_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var12_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 17;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var13_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var13_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("spatialCoordinateCollection", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq40_map_filter_elements(closure.var3_cur_filter_elements, closure.var1_create_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq40_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements;
		javax.xml.namespace.QName var3_create_qname;
	
		public seq40_map_filter_elements(com.altova.mapforce.IMFNode var1_cur_filter_elements, javax.xml.namespace.QName var3_create_qname)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
			this.var3_create_qname = var3_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq40_map_filter_elements closure;
			IEnumerator var2_filter_elements;
			public Enumerator(seq40_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("SpatialCoordinate", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("spatialCoordinateCollection", ""), closure.var1_cur_filter_elements)))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements.moveNext()) {state = 0; return false; }
				if (!(com.altova.functions.Core.exists((new seq41_map_map_filter_attributes(closure.var3_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current()))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("SpatialCoordinate", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq43_seq_(closure.var3_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current())))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq41_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq41_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq41_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq41_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq42_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq42_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq42_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq42_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq42_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{}TwoDimensionSpatialCoordinate"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq43_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq43_seq_(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq43_seq_ closure;
			IEnumerator var3_tbf2_TwoDimensionSpatialCoordinate;
			public Enumerator(seq43_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(closure.var1_create_qname, com.altova.functions.Core.box(com.altova.functions.Lang.stringAsQName("{gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM}TwoDimensionSpatialCoordinate")));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_tbf2_TwoDimensionSpatialCoordinate = (com.mapforce.tbf.tbf2_TwoDimensionSpatialCoordinate.create(closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_tbf2_TwoDimensionSpatialCoordinate.moveNext()) {state = 0; return false; }
				current = var3_tbf2_TwoDimensionSpatialCoordinate.current();
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq44_cond_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements;
	
		public seq44_cond_create_element_with_prefix(com.altova.mapforce.IEnumerable var1_filter_elements)
		{
			this.var1_filter_elements = var1_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq44_cond_create_element_with_prefix closure;
			public Enumerator(seq44_cond_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.exists(closure.var1_filter_elements))) {state = 0; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("Person", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", com.mapforce.tbf.tbf3_Person.create((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_filter_elements)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq45_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements;
		javax.xml.namespace.QName var19_create_qname;
	
		public seq45_map_filter_elements(com.altova.mapforce.IEnumerable var1_filter_elements, javax.xml.namespace.QName var19_create_qname)
		{
			this.var1_filter_elements = var1_filter_elements;
			this.var19_create_qname = var19_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq45_map_filter_elements closure;
			IEnumerator var2_filter_elements;
			javax.xml.namespace.QName var3_create_qname;
			javax.xml.namespace.QName var4_create_qname;
			javax.xml.namespace.QName var5_create_qname;
			javax.xml.namespace.QName var6_create_qname;
			javax.xml.namespace.QName var7_create_qname;
			javax.xml.namespace.QName var8_create_qname;
			javax.xml.namespace.QName var9_create_qname;
			javax.xml.namespace.QName var10_create_qname;
			com.altova.mapforce.IEnumerable var11_filter_attributes;
			com.altova.mapforce.IEnumerable var12_filter_attributes;
			com.altova.mapforce.IEnumerable var13_filter_attributes;
			com.altova.mapforce.IEnumerable var14_filter_elements;
			com.altova.mapforce.IEnumerable var15_filter_attributes;
			com.altova.mapforce.IEnumerable var16_filter_attributes;
			com.altova.mapforce.IEnumerable var17_filter_attributes;
			com.altova.mapforce.IEnumerable var18_filter_attributes;
			public Enumerator(seq45_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("TextAnnotation", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements.moveNext()) {state = 0; return false; }
				var3_create_qname = com.altova.functions.Core.createQName("textJustify", "");
				var4_create_qname = com.altova.functions.Core.createQName("fontOpacity", "");
				var5_create_qname = com.altova.functions.Core.createQName("fontSize", "");
				var6_create_qname = com.altova.functions.Core.createQName("font", "");
				var7_create_qname = com.altova.functions.Core.createQName("text", "");
				var8_create_qname = com.altova.functions.Core.createQName("fontColor", "");
				var9_create_qname = com.altova.functions.Core.createQName("fontEffect", "");
				var10_create_qname = com.altova.functions.Core.createQName("fontStyle", "");
				var11_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var9_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current()))));
				var12_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var10_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current()))));
				var13_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var6_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current()))));
				var14_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("multiPoint", ""), ((com.altova.mapforce.IMFNode)(var2_filter_elements.current()))));
				var15_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var4_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current()))));
				var16_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var3_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current()))));
				var17_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var8_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current()))));
				var18_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var5_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current()))));
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("TextAnnotation", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq46_seq_(closure.var19_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current())), var13_filter_attributes, var6_create_qname, var17_filter_attributes, var8_create_qname, var11_filter_attributes, var9_create_qname, var18_filter_attributes, var5_create_qname, var12_filter_attributes, var10_create_qname, var7_create_qname, var16_filter_attributes, var3_create_qname, var15_filter_attributes, var4_create_qname, var14_filter_elements)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq46_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
		com.altova.mapforce.IEnumerable var3_filter_attributes;
		javax.xml.namespace.QName var4_create_qname;
		com.altova.mapforce.IEnumerable var5_filter_attributes;
		javax.xml.namespace.QName var6_create_qname;
		com.altova.mapforce.IEnumerable var7_filter_attributes;
		javax.xml.namespace.QName var8_create_qname;
		com.altova.mapforce.IEnumerable var9_filter_attributes;
		javax.xml.namespace.QName var10_create_qname;
		com.altova.mapforce.IEnumerable var11_filter_attributes;
		javax.xml.namespace.QName var12_create_qname;
		javax.xml.namespace.QName var13_create_qname;
		com.altova.mapforce.IEnumerable var14_filter_attributes;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_attributes;
		javax.xml.namespace.QName var17_create_qname;
		com.altova.mapforce.IEnumerable var18_filter_elements;
	
		public seq46_seq_(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements, com.altova.mapforce.IEnumerable var3_filter_attributes, javax.xml.namespace.QName var4_create_qname, com.altova.mapforce.IEnumerable var5_filter_attributes, javax.xml.namespace.QName var6_create_qname, com.altova.mapforce.IEnumerable var7_filter_attributes, javax.xml.namespace.QName var8_create_qname, com.altova.mapforce.IEnumerable var9_filter_attributes, javax.xml.namespace.QName var10_create_qname, com.altova.mapforce.IEnumerable var11_filter_attributes, javax.xml.namespace.QName var12_create_qname, javax.xml.namespace.QName var13_create_qname, com.altova.mapforce.IEnumerable var14_filter_attributes, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_attributes, javax.xml.namespace.QName var17_create_qname, com.altova.mapforce.IEnumerable var18_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
			this.var3_filter_attributes = var3_filter_attributes;
			this.var4_create_qname = var4_create_qname;
			this.var5_filter_attributes = var5_filter_attributes;
			this.var6_create_qname = var6_create_qname;
			this.var7_filter_attributes = var7_filter_attributes;
			this.var8_create_qname = var8_create_qname;
			this.var9_filter_attributes = var9_filter_attributes;
			this.var10_create_qname = var10_create_qname;
			this.var11_filter_attributes = var11_filter_attributes;
			this.var12_create_qname = var12_create_qname;
			this.var13_create_qname = var13_create_qname;
			this.var14_filter_attributes = var14_filter_attributes;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_attributes = var16_filter_attributes;
			this.var17_create_qname = var17_create_qname;
			this.var18_filter_elements = var18_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq46_seq_ closure;
			com.altova.mapforce.IEnumerable var19_filter_elements;
			public Enumerator(seq46_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var1_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				if (!(com.altova.functions.Core.exists(closure.var3_filter_attributes))) {state = 5; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var4_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var3_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 8;				
				if (!(com.altova.functions.Core.exists(closure.var5_filter_attributes))) {state = 8; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var6_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var5_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 11;				
				if (!(com.altova.functions.Core.exists(closure.var7_filter_attributes))) {state = 11; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var8_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var7_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 14;				
				if (!(com.altova.functions.Core.exists(closure.var9_filter_attributes))) {state = 14; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var10_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var9_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 17;				
				if (!(com.altova.functions.Core.exists(closure.var11_filter_attributes))) {state = 17; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var12_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var11_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 18;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var13_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var13_create_qname, closure.var2_cur_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 21;				
				if (!(com.altova.functions.Core.exists(closure.var14_filter_attributes))) {state = 21; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var15_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var14_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 24;				
				if (!(com.altova.functions.Core.exists(closure.var16_filter_attributes))) {state = 24; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var17_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var16_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_24() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.exists(closure.var18_filter_elements))) {state = 0; return false; }
				var19_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("MultiPoint", ""), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var18_filter_elements)));
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("multiPoint", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq47_cond_create_element_with_prefix(var19_filter_elements, closure.var1_create_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq47_cond_create_element_with_prefix implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements;
		javax.xml.namespace.QName var13_create_qname;
	
		public seq47_cond_create_element_with_prefix(com.altova.mapforce.IEnumerable var1_filter_elements, javax.xml.namespace.QName var13_create_qname)
		{
			this.var1_filter_elements = var1_filter_elements;
			this.var13_create_qname = var13_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq47_cond_create_element_with_prefix closure;
			javax.xml.namespace.QName var2_create_qname;
			javax.xml.namespace.QName var3_create_qname;
			javax.xml.namespace.QName var4_create_qname;
			javax.xml.namespace.QName var5_create_qname;
			javax.xml.namespace.QName var6_create_qname;
			javax.xml.namespace.QName var7_create_qname;
			com.altova.mapforce.IMFNode var8_filter_elements;
			com.altova.mapforce.IEnumerable var9_filter_attributes;
			com.altova.mapforce.IEnumerable var10_filter_attributes;
			com.altova.mapforce.IEnumerable var11_filter_attributes;
			com.altova.mapforce.IEnumerable var12_filter_attributes;
			public Enumerator(seq47_cond_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.exists(closure.var1_filter_elements))) {state = 0; return false; }
				var2_create_qname = com.altova.functions.Core.createQName("lineThickness", "");
				var3_create_qname = com.altova.functions.Core.createQName("shapeIdentifier", "");
				var4_create_qname = com.altova.functions.Core.createQName("lineStyle", "");
				var5_create_qname = com.altova.functions.Core.createQName("lineOpacity", "");
				var6_create_qname = com.altova.functions.Core.createQName("includeFlag", "");
				var7_create_qname = com.altova.functions.Core.createQName("lineColor", "");
				var8_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_filter_elements);
				var9_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var5_create_qname, var8_filter_elements));
				var10_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var4_create_qname, var8_filter_elements));
				var11_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var7_create_qname, var8_filter_elements));
				var12_filter_attributes = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(var2_create_qname, var8_filter_elements));
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("MultiPoint", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq48_seq_(closure.var13_create_qname, var8_filter_elements, var11_filter_attributes, var7_create_qname, var9_filter_attributes, var5_create_qname, var10_filter_attributes, var4_create_qname, var12_filter_attributes, var2_create_qname, var6_create_qname, var3_create_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq48_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_filter_elements;
		com.altova.mapforce.IEnumerable var3_filter_attributes;
		javax.xml.namespace.QName var4_create_qname;
		com.altova.mapforce.IEnumerable var5_filter_attributes;
		javax.xml.namespace.QName var6_create_qname;
		com.altova.mapforce.IEnumerable var7_filter_attributes;
		javax.xml.namespace.QName var8_create_qname;
		com.altova.mapforce.IEnumerable var9_filter_attributes;
		javax.xml.namespace.QName var10_create_qname;
		javax.xml.namespace.QName var11_create_qname;
		javax.xml.namespace.QName var12_create_qname;
	
		public seq48_seq_(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_filter_elements, com.altova.mapforce.IEnumerable var3_filter_attributes, javax.xml.namespace.QName var4_create_qname, com.altova.mapforce.IEnumerable var5_filter_attributes, javax.xml.namespace.QName var6_create_qname, com.altova.mapforce.IEnumerable var7_filter_attributes, javax.xml.namespace.QName var8_create_qname, com.altova.mapforce.IEnumerable var9_filter_attributes, javax.xml.namespace.QName var10_create_qname, javax.xml.namespace.QName var11_create_qname, javax.xml.namespace.QName var12_create_qname)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_filter_elements = var2_filter_elements;
			this.var3_filter_attributes = var3_filter_attributes;
			this.var4_create_qname = var4_create_qname;
			this.var5_filter_attributes = var5_filter_attributes;
			this.var6_create_qname = var6_create_qname;
			this.var7_filter_attributes = var7_filter_attributes;
			this.var8_create_qname = var8_create_qname;
			this.var9_filter_attributes = var9_filter_attributes;
			this.var10_create_qname = var10_create_qname;
			this.var11_create_qname = var11_create_qname;
			this.var12_create_qname = var12_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq48_seq_ closure;
			public Enumerator(seq48_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var1_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				if (!(com.altova.functions.Core.exists(closure.var3_filter_attributes))) {state = 5; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var4_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var3_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 8;				
				if (!(com.altova.functions.Core.exists(closure.var5_filter_attributes))) {state = 8; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var6_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var5_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 11;				
				if (!(com.altova.functions.Core.exists(closure.var7_filter_attributes))) {state = 11; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var8_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var7_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 14;				
				if (!(com.altova.functions.Core.exists(closure.var9_filter_attributes))) {state = 14; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var10_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var9_filter_attributes))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var11_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var11_create_qname, closure.var2_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 16;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var12_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var12_create_qname, closure.var2_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("spatialCoordinateCollection", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq49_seq_()));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq49_seq_ implements IEnumerable
	{
	
		public seq49_seq_()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq49_seq_ closure;
			public Enumerator(seq49_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				return false;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}



	// instances
	protected org.w3c.dom.Node vargeneratedAIMSchema112Instance;

	public void run(String generatedAIMSchema112SourceFilename) throws Exception {
		// open source streams
		writeTrace("Loading " + generatedAIMSchema112SourceFilename + "...\n");
		com.altova.io.FileInput generatedAIMSchema112Source = new com.altova.io.FileInput(generatedAIMSchema112SourceFilename);

		// run
		run(generatedAIMSchema112Source);

		// close source streams
		generatedAIMSchema112Source.close();
	}


	// main entry point

	public void run(com.altova.io.Input generatedAIMSchema112Source) throws Exception {
		// Open the source(s)
		org.w3c.dom.Document doc_generatedAIMSchema112 = XmlTreeOperations.loadDocument(generatedAIMSchema112Source);
		vargeneratedAIMSchema112Instance = doc_generatedAIMSchema112;
		generatedAIMSchema112Source.close();

		// Create the target

		// Execute mapping

		main mapping = new main(new com.altova.xml.DOMDocumentAsMFNodeAdapter(vargeneratedAIMSchema112Instance, generatedAIMSchema112Source.getFilename()));

		for (IEnumerator en = mapping.enumerator(); en.moveNext();)
		{
		  MFDocument doc = (MFDocument) en.current();
		org.w3c.dom.Document AIM_v3_rv9_XML2Doc = XmlTreeOperations.createDocument();
		  com.altova.io.Output AIM_v3_rv9_XMLTarget = new com.altova.io.FileOutput(doc.getFilename());
		  com.altova.xml.MFDOMWriter.write(doc.select(IMFNode.MFQueryKind_All, null), AIM_v3_rv9_XML2Doc);
		XmlTreeOperations.saveDocument(AIM_v3_rv9_XML2Doc, AIM_v3_rv9_XMLTarget, "UTF-8", false, false, true);
		  AIM_v3_rv9_XMLTarget.close();
		}

	}



}
