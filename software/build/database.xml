<?xml version="1.0" encoding="utf-8" ?>

<project name="nbia-database">


  <target name="install:database:prep"
          description="Copies db files with filtering"
          unless="exclude.database"
          depends="common:common:init">

    <echoproperties prefix="database"/>

    <copy todir="${db.dir.dest}" filtering="true">
      <fileset dir="${db.dir.src}">
        <include name="**/*"/>
      </fileset>
      <filterset refid="embedded.filterset"/>
      <filterset>
        <filtersfile file="${properties.file}"/>
        <filtersfile file="project.properties"/>
      </filterset>
    </copy>

    <copy todir="${os.temp.dir}/nbia" filtering="true" flatten="true" overwrite="true">
      <fileset dir="${db.dir.dest}/db-upgrade/${database.type}">
        <include name="**/db-upgrade.xml"/>
      </fileset>
    </copy>

  </target>

  <target name="install:database"
          description="Runs datbase creation scripts then calls uprade database."
          unless="exclude.database"
          depends="common:common:init,
                  install:database:prep,
                   install:database:validation:pre-install">
    <!-- Drop all schema objects or re-create the db -->
    <database-clean/>
    <!-- Run baseline scripts stored in db.install.create.${database.type}.file.list variable -->
    <switch value="${database.type}">
      <case value="oracle">
        <database-install
          db.install.create.file.list="${db.install.create.oracle.file.list}"
          sql.delimiter=";"
          sql.delimitertype="row"
          />
      </case>
      <case value="mysql">
        <database-install
          db.install.create.file.list="${db.install.create.mysql.file.list}"
          />
      </case>
    </switch>
    <database-upgrade database.changelog.file="${os.temp.dir}/nbia/db-upgrade.xml"/>
    <database-tag/>

    <antcall target="create-guest-account"/>
  </target>


  <!-- This is a top-level target -->
  <target name="upgrade:database"
          description="Upgrades database using BDA Datbase Upgrade process."
          unless="exclude.database"
          depends="upgrade:database:init,
                   common:common:init,
                   install:database:prep">
    <database-upgrade database.changelog.file="${os.temp.dir}/nbia/db-upgrade.xml"/>
    <database-tag/>
    <antcall target="create-guest-account"/>
  </target>


  <target name="upgrade:database:tag"
          description="Tags current state of database with a tag to allow for rollback of database to previous versions."
          unless="exclude.database"
          depends="upgrade:database:init,
                   common:common:init,
                   install:database:prep">
    <database-tag/>
  </target>

  <target name="upgrade:database:rollback"
          description="Rolls back database to previous tagged version using rollback scripts."
          unless="exclude.database"
          depends="upgrade:database:init,
                   common:common:init,
                   install:database:prep">
    <database-rollback/>
  </target>


  <target name="upgrade:database:init"
          depends="upgrade:jboss:init:prep,
                   upgrade:database:readers:bda,
                   upgrade:database:readers:custom">
    <!-- You need to either depend on jboss or tomcat so that you can read the db properties from it's configs.  BDA only has macros to read database properties from jboss. -->
  </target>


  <target name="install:database:validation:pre-install"
          description="Runs pre-install validation checks bda-utils"
          depends="common:common:init,
                   install:common:validation:pre-install">
    <validate-pre-install-database
      database.version="${mysql.minimum.version}"
      />
  </target>

  <target name="upgrade:database:readers:bda" depends="upgrade:jboss:init:prep" if="jboss.exists">

    <!-- Make sure the ${properties.file} has at least the following props -->
    <properties-exist
      properties.list="application.base.path,jboss.home,jboss.server.name"
      />
    <jboss-read-dbconfig
      jboss.home="${read.jboss.home}"
      jboss.ds-xml.file="ncia-ds.xml"
      />
  </target>

  <target name="upgrade:database:readers:custom">
    <!-- for 4.2 sort of.... really for gui installer in 4.3 where db can be upgraded by itself -->
    <read-property-from-properties-service property.name="enabled_guest_account"
                                           properties-service-xml.file="${jboss.home}/server/${jboss.server.name}/deploy/properties-service.xml"/>

    <read-property-from-properties-service property.name="guest_username"
                                           properties-service-xml.file="${jboss.home}/server/${jboss.server.name}/deploy/properties-service.xml"/>

  </target>

  <target name="create-guest-account">
    <!-- this mysql dependent -->
    <if>
      <equals arg1="${enabled_guest_account}" arg2="yes"/>
      <then>
        <run-sql-script-ncia sql="select count(*) from csm_user where login_name = '${guest_username}'"
                             output.file="${os.temp.dir}/nbia/guest_user_found_results.txt"/>
        <loadfile property="guest_user_found_results"
                  srcFile="${os.temp.dir}/nbia/guest_user_found_results.txt"/>

        <read-second-line in.property.name="guest_user_found_results"
                          out.property.name="guest_user_found_count"/>

        <delete file="${os.temp.dir}/nbia/guest_user_found_results.txt"/>

        <if>
          <not>
            <equals arg1="${guest_user_found_count}" arg2="1"/>
          </not>
          <then>
            <if>
              <equals arg1="${database.type}" arg2="mysql"/>
              <then>
                <property name="insert.csm.user" value="insert into csm_user (LOGIN_NAME,FIRST_NAME,LAST_NAME,EMAIL_ID,PASSWORD,UPDATE_DATE)
                                                        values ('${guest_username}','guest','guest','guest', 'zJPWCwDeSgG8j2uyHEABIQ==',sysdate());"/>
              </then>
              <else> <!-- oracle, csm_user_user_id_seq.nextva -->
                <property name="insert.csm.user" value="insert into csm_user (USER_ID, LOGIN_NAME,FIRST_NAME,LAST_NAME,EMAIL_ID,PASSWORD,UPDATE_DATE)
                                                        values (2, '${guest_username}','guest','guest','guest', 'zJPWCwDeSgG8j2uyHEABIQ==',sysdate);"/>
              </else>
            </if>

            <run-sql-script-ncia sql="${insert.csm.user}"
                                 output.file="${os.temp.dir}/insert_user.txt"/>

            <!-- theoretically someone coudl alter this, but we dont give them an easy way to do it -->
            <run-sql-script-ncia sql="select group_id from csm_group where group_name = 'PUBLIC-GRID'"
                                 output.file="${os.temp.dir}/public_grid_results.txt"/>
            <loadfile property="public_grid_results"
                      srcFile="${os.temp.dir}/public_grid_results.txt"/>


            <read-second-line in.property.name="public_grid_results"
                          out.property.name="public_group_id"/>

            <echo>public_group_id: ${public_group_id}</echo>

            <run-sql-script-ncia sql="select user_id from csm_user where login_name = '${guest_username}'"
                                 output.file="${os.temp.dir}/guest_user_id_results.txt"/>
            <loadfile property="guest_user_id_results"
                      srcFile="${os.temp.dir}/guest_user_id_results.txt"/>

            <read-second-line in.property.name="guest_user_id_results"
                          out.property.name="guest_user_id"/>

            <echo>guest_user_id: ${guest_user_id}</echo>

            <if>
              <equals arg1="${database.type}" arg2="mysql"/>
              <then>
                <property name="insert.csm.user_group"
                          value="insert into csm_user_group (user_id, group_id)
                                 values ('${guest_user_id}','${public_group_id}');"/>
              </then>
              <else> <!-- oracle -->
                <property name="insert.csm.user_group"
                          value="insert into csm_user_group (user_group_id, user_id, group_id)
                                 values (1, '${guest_user_id}','${public_group_id}');"/>
              </else>
            </if>


            <run-sql-script-ncia sql="${insert.csm.user_group}"
                                 output.file="${os.temp.dir}/insert_user_group.txt"/>
          </then>
          <else>
            <echo>Guest account is enabled but a csm_user with that name exists so not going to add one</echo>
          </else>
        </if>
      </then>
      <else>
        <echo>Guest account not enabled.  Not going to attempt to add csm_user</echo>
      </else>
    </if>
  </target>

</project>
