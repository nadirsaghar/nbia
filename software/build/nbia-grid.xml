<?xml version="1.0" encoding="utf-8" ?>

<project name="nbia-grid">
  <!-- Wrapper target to deploy nbia-grid tomcat container -->
  <target name="install:nbia-grid"
          unless="exclude.nbia-grid"
          depends="common:nbia-grid:init,
                   common:common:init,
                   install:nbia-grid:init,
                   install:nbia-grid:jboss:stop,
                   install:nbia-grid:clean,
                   install:nbia-grid:binaries,
                   install:nbia-grid:wsrf,

                   install:nbia-grid:application,
                   install:nbia-grid:configure,
                   install:nbia-grid:post,
                   install:nbia-grid:jboss:start" />

<!-- need 1.4 version of this dist                  install:nbia-grid:transfer-service,                   -->

  <target name="install:nbia-grid:ncm"
          unless="exclude.nbia-grid"
          depends="common:nbia-grid:init,
                   common:common:init,
                   install:nbia-grid:init,
                   install:nbia-grid:wsrf,

                   install:nbia-grid:application,
                   install:nbia-grid:configure" />

<!-- need 1.4 version of this dist                  install:nbia-grid:transfer-service,                   -->

  <target name="install:nbia-grid:clean" unless="exclude.nbia-grid">
    <fail unless="application.base.path"/>

    <sleep seconds="5" />
    <property name="backup.count" value="5"/>
    <if>
      <not>
        <equals arg1="${exclude.nbia-grid.jboss.backup}" arg2="true"/>
      </not>
      <then>
        <property name="backup.nbia-grid.jboss.base.dir"
                  location="${application.base.path}/backup/nbia-grid.jboss"/>

        <!-- So these directories won't be included in the backup, they are not needed to use jboss -->
        <delete dir="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/work"/>
        <delete dir="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/tmp"/>

        <backup-dir
          src.dir="${nbia-grid.jboss.home}"
          backup.base.dir="${backup.nbia-grid.jboss.base.dir}"
          backup.count="${backup.count}"
          />
      </then>
    </if>
    <delete dir="${nbia-grid.jboss.home}"/>
    <echo>Should be deleted</echo>
  </target>


  <target name="install:nbia-grid:binaries"
          description="Install JBoss for nbia-grid"
          unless="exclude.nbia-grid"
          depends="common:nbia-grid:init,
                   common:common:init" >

    <dirname file="${nbia-grid.jboss.home}" property="nbia-grid.jboss.base.path"/>
    <echo message="nbia-grid.jboss.base.path is ${nbia-grid.jboss.base.path}"/>

    <jboss-install-binaries jboss.home="${nbia-grid.jboss.home}"
                            jboss.server.name="${nbia-grid.jboss.server.name}"/>

    <jboss-nci-customizations jboss.home="${nbia-grid.jboss.home}"
                              jboss.server.name="${nbia-grid.jboss.server.name}"
                              jboss.server.jndi.port="${nbia-grid.jboss.server.jndi.port}"
                              jboss.java.opts="${nbia-grid.jboss.java.opts}"/>

  </target>

  <target name="install:nbia-grid:configure"
          description="Configure JBoss (change ports)"
          unless="exclude.nbia-grid"
          depends="common:nbia-grid:init,
                   common:common:init" >

    <echoproperties prefix="nbia-grid"/>
    <!-- authentication.type is a dont care  -->
    <jboss-configure jboss.server.ports.name="${nbia-grid.jboss.server.ports.name}"
                     authentication.type="ldap"
                     jboss.home="${nbia-grid.jboss.home}"
                     jboss.server.name="${nbia-grid.jboss.server.name}"
                     jboss.server.bindingfile.location="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/conf/bindings.xml"
                     jboss.server.binding.template.location="${nbia-grid.jboss.server.binding.template.location}"
                     jboss.web.user="${nbia-grid.jboss.web.user}"
                     jboss.web.password="${nbia-grid.jboss.web.password}"
                     jboss.server.jndi.port="${nbia-grid.jboss.server.jndi.port}"
                     jboss.server.port="${nbia-grid.jboss.server.port}"
                     jboss.cobraorb.port="${nbia-grid.jboss.cobraorb.port}"
                     jboss.ejbinvoker.port="${nbia-grid.jboss.ejbinvoker.port}"
                     jboss.hajndi.port="${nbia-grid.jboss.hajndi.port}"
                     jboss.hajrmi.port="${nbia-grid.jboss.hajrmi.port}"
                     jboss.jms.port="${nbia-grid.jboss.jms.port}"
                     jboss.jmx-rmi.port="${nbia-grid.jboss.jmx-rmi.port}"
                     jboss.messaging.port="${nbia-grid.jboss.messaging.port}"
                     jboss.pooledha.port="${nbia-grid.jboss.pooledha.port}"
                     jboss.remoting.port="${nbia-grid.jboss.remoting.port}"
                     jboss.server.bind.port="${nbia-grid.jboss.server.bind.port}"
                     jboss.server.rmi.port="${nbia-grid.jboss.server.rmi.port}"
                     jboss.service.rmiobject.port="${nbia-grid.jboss.service.rmiobject.port}"
                     jboss.snmp.port="${nbia-grid.jboss.snmp.port}"
                     jboss.snmp-trapd.port="${nbia-grid.jboss.snmp-trapd.port}"
                     jboss.web.service.port="${nbia-grid.jboss.web.service.port}"
                     jboss.conf.dir="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/conf"
                     jboss.server-xml.file="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/deploy/jbossweb-tomcat55.sar/server.xml"
                     jboss.ssl.enable="false"
                     jboss.external.http.host="${nbia-grid.jboss.external.http.host}"
                     jboss.external.http.port="${nbia-grid.jboss.external.http.port}"
                     jboss.server.hostname="${nbia-grid.jboss.server.hostname}"
                     jboss.java.opts="${nbia-grid.jboss.java.opts}"
                     jboss.logs.dir="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/log"
                     jboss.grid.configure="false"
                     jboss.grid.secure.enable="false"/>


    <jboss-configure-grid jboss.conf.dir="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/conf"
                          jboss.webapp.dir="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/deploy"
                          jboss.server-xml.file="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/deploy/jbossweb-tomcat55.sar/server.xml"
                          jboss.port.http="${nbia-grid.jboss.server.port}"
                          jboss.port.ssl="${nbia-grid.jboss.ssl.port}"
                          jboss.hostname="${nbia-grid.jboss.server.hostname}"
                          jboss.external.http.host="${nbia-grid.jboss.external.http.host}"
                          jboss.external.http.port="${nbia-grid.jboss.external.http.port}"
                          grid.application.name="NBIAService"
                          grid.application.relative.dir="wsrf.war"
                          jboss.grid.secure.enable="false"/>

    <!-- with bda 1.0.2 this must come after the jboss-configure-grid call, otherwise
         the gridServiceUrl will be corrupted by what jboss-configure-grid does -->
    <xmltask source="${nbia-grid.wsrf.path}/WEB-INF/etc/cagrid_NBIAService/jndi-config.xml"
             dest="${nbia-grid.wsrf.path}/WEB-INF/etc/cagrid_NBIAService/jndi-config.xml">
      <!-- no xmlcatalog necessary -->
      <replace path="//:parameter[:name='databaseConnectionUrl']/:value/text()"
               withtext="${database.url}" />

    <!--

      <replace path="//:parameter[:name='thumbnailUrl']/:value/text()"
               withtext="${nbia-grid.jboss.thumbnailUrl}" />

-->

      <replace path="//:resource[@name='nciaDatabase']//:parameter[:name='driverClass']/:value/text()"
               withtext="${database.driver}" />
      <replace path="//:resource[@name='nciaDatabase']//:parameter[:name='jdbcUrl']/:value/text()"
               withtext="${database.url}" />
      <replace path="//:resource[@name='nciaDatabase']//:parameter[:name='user']/:value/text()"
               withtext="${database.user}" />
      <replace path="//:resource[@name='nciaDatabase']//:parameter[:name='password']/:value/text()"
               withtext="${database.password}" />
<!--

      <replace path="//:parameter[:name='tempZipLocation']/:value/text()"
               withtext="${nbia-grid.tempZipLocation}" />
               -->
     </xmltask>

<!-- patch commons to use JNDI name that is globus friendly -->
<!--
    <mkdir dir="${nbia-grid.wsrf.path}/WEB-INF/lib/tmp"/>
    <unjar src="${nbia-grid.wsrf.path}/WEB-INF/lib/nbia-dao.jar"
           dest="${nbia-grid.wsrf.path}/WEB-INF/lib/tmp"/>
    <delete file="${nbia-grid.wsrf.path}/WEB-INF/lib/nbia-dao.jar"/>

    <replaceregexp file="${nbia-grid.wsrf.path}/WEB-INF/lib/tmp/hibernate.properties"
                   byline="true"
                   match="^\s*hibernate.connection.datasource\s\s*(.*)$"
                   replace="hibernate.connection.datasource java:comp/env/nciaDatabase"/>
    <replaceregexp file="${nbia-grid.wsrf.path}/WEB-INF/lib/tmp/hibernate.properties"
                   byline="true"
                   match="^\s*hibernate.connection.driver_class\s\s*(.*)$"
                   replace="hibernate.connection.driver_class ${database.driver}"/>
    <replaceregexp file="${nbia-grid.wsrf.path}/WEB-INF/lib/tmp/hibernate.properties"
                   byline="true"
                   match="^\s*hibernate.dialect\s\s*(.*)$"
                   replace="hibernate.dialect ${database.dialect}"/>

    <xmltask source="${nbia-grid.wsrf.path}/WEB-INF/lib/tmp/NCIA.csm.new.hibernate.cfg.xml"
             dest="${nbia-grid.wsrf.path}/WEB-INF/lib/tmp/NCIA.csm.new.hibernate.cfg.xml"
             preservetype="true">
      <xmlcatalog refid="bda.xml.catalog"/>
      <replace path="//property[@name='connection.datasource']/text()"
               withtext="java:comp/env/nciaDatabase" />
      <replace path="//property[@name='dialect']/text()"
               withtext="${database.dialect}" />
      <replace path="//property[@name='connection.driver_class']/text()"
               withtext="${database.driver}" />
    </xmltask>

    <jar jarfile="${nbia-grid.wsrf.path}/WEB-INF/lib/nbia-dao.jar"
         compress="false">
      <fileset dir="${nbia-grid.wsrf.path}/WEB-INF/lib/tmp">
        <include name="*/**" />
      </fileset>
    </jar>

    <delete dir="${nbia-grid.wsrf.path}/WEB-INF/lib/tmp"/>
-->

    <!-- ******************** begin orm patch *********************** -->

    <mkdir dir="${nbia-grid.wsrf.path}/WEB-INF/lib/tmp"/>
    <unjar src="${nbia-grid.wsrf.path}/WEB-INF/lib/ncia-orm.jar"
           dest="${nbia-grid.wsrf.path}/WEB-INF/lib/tmp"/>
    <delete file="${nbia-grid.wsrf.path}/WEB-INF/lib/ncia-orm.jar"/>

    <xmltask source="${nbia-grid.wsrf.path}/WEB-INF/lib/tmp/hibernate.cfg.xml"
             dest="${nbia-grid.wsrf.path}/WEB-INF/lib/tmp/hibernate.cfg.xml"
             preservetype="true">
      <xmlcatalog refid="bda.xml.catalog"/>


      <replace path="//property[@name='dialect']/text()"
               withtext="${database.dialect}" />
    </xmltask>

    <jar jarfile="${nbia-grid.wsrf.path}/WEB-INF/lib/ncia-orm.jar"
         compress="false">
      <fileset dir="${nbia-grid.wsrf.path}/WEB-INF/lib/tmp">
        <include name="*/**" />
      </fileset>
    </jar>

    <!-- ******************** end orm patch *********************** -->

    <copy file="${working.dir}/common/resources/grid/properties-service.xml"
          todir="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/deploy" overwrite="true" >
    </copy>



  </target>

  <target name="install:nbia-grid:wsrf"
          unless="exclude.nbia-grid"
          depends="common:nbia-grid:init,
                   common:common:init" >

    <delete dir="${nbia-grid.wsrf.path}"/>
    <mkdir dir="${nbia-grid.wsrf.path}"/>

    <!-- pretty sure we can reuse the old one from tomcat?
         do this first so patched globus stuff in artifact file will overwrite -->
    <unzip dest="${nbia-grid.wsrf.path}"
           src="${grid.resource.dir.src}/tomcat-globus-wsrf.zip" />


    <unzip dest="${nbia-grid.wsrf.path}"
           src="${nbia-grid.dir.src}/${nbia-grid.artifact.file}" />

    <!-- CP15 complains about commons-logging in war file? -->
    <delete>
      <fileset dir="${nbia-grid.wsrf.path}/WEB-INF/lib"
               includes="commons-logging*.jar"/>
    </delete>

  </target>


  <target name="install:nbia-grid:transfer-service"
          unless="exclude.nbia-grid"
          depends="common:nbia-grid:init,
                   common:common:init" >

    <property name="nbia-grid.caGridTransfer.war.path"
              location ="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/deploy/caGridTransfer.war"/>
    <delete dir="${nbia-grid.caGridTransfer.war.path}"/>


    <unzip dest="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/deploy"
           src="${grid.resource.dir.src}/caGridTransfer.zip"/>

    <replaceregexp file="${nbia-grid.caGridTransfer.war.path}/WEB-INF/classes/server.properties"
                   byline="true"
                   match="^\s*transfer.service.persistence.relative.location\s*=(.*)$"
                   replace="transfer.service.persistence.relative.location=wsrf.war/WEB-INF/etc/cagrid_TransferService/persisted/TransferServiceContextResourceProperties"/>
    <delete>
      <fileset dir="${nbia-grid.caGridTransfer.war.path}/WEB-INF/lib">
        <include name="log4j*.jar"/>
        <include name="commons-logging*.jar"/>
      </fileset>
    </delete>

    <unzip dest="${nbia-grid.wsrf.path}"
           src="${grid.resource.dir.src}/caGridTransfer-wsrf.zip"/>


  </target>


  <target name="install:nbia-grid:application"
          description="Deploy nbia-grid to JBoss"
          unless="exclude.nbia-grid"
          depends="common:nbia-grid:init,
                   common:common:init" >

    <available file="${nbia-grid.caGridTransfer.war.path}"
               property="nbia-grid.transfer.service.available"/>
    <!--
    <fail unless="nbia-grid.transfer.service.available"
          message="It appears that the caGrid Transfer service is not deployed.  nbia-grid cant be deployed without it"/>
      -->
<!--
    <if>
      <equals arg1="${nbia-grid.tempZipLocation}" arg2=""/>
      <then>
        <var name="nbia-grid.tempZipLocation" value="${java.io.tmpdir}/tempzip/"/>
      </then>
    </if>

    <mkdir dir="${nbia-grid.tempZipLocation}"/>
 -->

    <xmltask source="${nbia-grid.wsrf.path}/WEB-INF/etc/cagrid_NBIAService/NBIAService_registration.xml"
             dest="${nbia-grid.wsrf.path}/WEB-INF/etc/cagrid_NBIAService/NBIAService_registration.xml">
      <!-- no xmlcatalog necessary -->
      <replace path="//:ServiceGroupEPR/:Address/text()"
               withtext="${grid.index.url}" />

     </xmltask>

    <copy file="nbia-service/NCIA.csm.new.hibernate.cfg.xml"
          todir="${nbia-grid.wsrf.path}/WEB-INF/classes"/>
<!--
    <copy file="ncia-core-grid-transfer/log4j.properties"
          todir="${nbia-grid.wsrf.path}/WEB-INF/classes"
          overwrite="true"/>
    -->
  </target>


  <target name="upgrade:nbia-grid"
          unless="exclude.nbia-grid"
          depends="upgrade:nbia-grid:init,
                   common:common:init,
                   upgrade-dac:nbia-grid">
  </target>


  <target name="upgrade-dac:nbia-grid"
          unless="exclude.nbia-grid"
          depends="upgrade:nbia-grid:init,
                   common:common:init,
                   common:nbia-grid:init,
                   install:nbia-grid:jboss:stop,
                   install:nbia-grid:clean,
                   install:nbia-grid:binaries,
                   install:nbia-grid:wsrf,

                   install:nbia-grid:application,
                   install:nbia-grid:configure,
                   install:nbia-grid:post,
                   install:nbia-grid:jboss:start" />

<!-- need 1.4 version of this dist                  install:nbia-grid:transfer-service,                   -->

  <!-- Wrapper targets for calling bda macros -->
  <target name="install:nbia-grid:jboss:stop"
          if="nbia-grid.jboss.exists"
          unless="exclude.nbia-grid">

    <jboss-stop-jboss jboss.home="${nbia-grid.jboss.home}"
                      jboss.server.hostname="${nbia-grid.jboss.server.hostname}"
                      jboss.server.jndi.port="${nbia-grid.jboss.server.jndi.port}"
                      jboss.server.name="${nbia-grid.jboss.server.name}"
                      jboss.web.user="${nbia-grid.jboss.web.user}"
                      jboss.web.password="${nbia-grid.jboss.web.password}" />

  </target>

  <target name="install:nbia-grid:jboss:start" unless="exclude.nbia-grid">
    <if>
      <not>
        <isset property="exclude.start.servers"/>
      </not>
      <then>
        <jboss-start-jboss jboss.home="${nbia-grid.jboss.home}"
                           jboss.server.name="${nbia-grid.jboss.server.name}"/>
      </then>
    </if>
  </target>

  <target name="install:nbia-grid:post" unless="exclude.nbia-grid">
    <if>
      <not>
        <equals arg1="${exclude.nbia-grid.jboss.backup}" arg2="true"/>
      </not>
      <then>
        <property name="nbia-grid.changelogFile" location="${install-logs.dir}/changeLog-${install.time}.txt"/>
        <property name="nbia-grid.compare1.dir" location="${backup.nbia-grid.jboss.base.dir}/backup/jboss-4.0.5.GA"/>
        <property name="nbia-grid.compare2.dir" location="${nbia-grid.jboss.home}"/>
        <report-dir-diff
          dir1="${nbia-grid.compare1.dir}"
          dir2="${nbia-grid.compare2.dir}"
          reportFile="${nbia-grid.changelogFile}"
          />
        <!-- Copy app server logs -->
        <mkdir dir="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/log"/>
        <mkdir dir="${backup.nbia-grid.jboss.base.dir}/backup/jboss-4.0.5.GA/server/${nbia-grid.jboss.server.name}/log"/>
        <!-- so the logs wont be included in the zip -->
        <move todir="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/log">
          <fileset dir="${backup.nbia-grid.jboss.base.dir}/backup/jboss-4.0.5.GA/server/${nbia-grid.jboss.server.name}/log">
            <include name="*"/>
          </fileset>
        </move>

        <!-- Compress backup and cleanup -->
        <mkdir dir="${backup.nbia-grid.jboss.base.dir}/backup1"/>
        <zip destfile="${backup.nbia-grid.jboss.base.dir}/backup1/jboss-4.0.5.GA.zip"
             basedir="${backup.nbia-grid.jboss.base.dir}/backup" />
        <delete dir="${backup.nbia-grid.jboss.base.dir}/backup"/>
      </then>
    </if>

  </target>



  <target name="upgrade:nbia-grid:readers:custom:jboss"
          unless="exclude.nbia-grid">

    <trycatch property="reader.failure.reason">
      <try>
        <read-ncia-core-grid-jndi-config jndi.config.file="${nbia-grid.wsrf.path}/WEB-INF/etc/cagrid_NBIAService/jndi-config.xml"
                                         tempZipLocation.property="nbia-grid.tempZipLocation"
                                         thumbnailUrl.property="nbia-grid.jboss.thumbnailUrl" />

      </try>
      <catch>
        <echo>Couldnt read JNDI config for Jboss core-grid, but this is fine if this is the first time.</echo>
        <echo>${reader.failure.reason}</echo>
      </catch>
    </trycatch>

  </target>


  <target name="upgrade:nbia-grid:readers:custom"
          depends="upgrade:nbia-grid:readers:custom:jboss"
          unless="exclude.nbia-grid">
    <!-- nothing here on purpose -->
  </target>


  <target name="upgrade:nbia-grid:readers:bda"
          depends="upgrade:nbia-grid:readers:bda:jboss"
          unless="exclude.nbia-grid">
    <!-- nothing here on purpose -->
  </target>

  <target name="upgrade:nbia-grid:readers:bda:jboss"
          unless="exclude.nbia-grid">
    <trycatch property="unsecured.reader.exception">
      <try>
        <!-- Make sure the ${properties.file} has at least the following props -->
        <properties-exist
                properties.list="application.base.path,nbia-grid.jboss.home,nbia-grid.jboss.server.name"
                />

        <!-- Begin Tomcat readers, delete if you don't need -->
        <osfamily property="os.family"/>
        <if>
          <or>
            <equals arg1="${os.family}" arg2="unix"/>
            <equals arg1="${os.family}" arg2="mac"/>
          </or>
          <then>
            <property name="nbia-grid.jboss.server.hostname" value="${env.HOSTNAME}"/>
          </then>
        </if>
        <if>
          <equals arg1="${os.family}" arg2="windows"/>
          <then>
            <property name="nbia-grid.jboss.server.hostname" value="${env.COMPUTERNAME}"/>
          </then>
        </if>
        <var name="read.properties.list" value=""/>

        <jboss-read-bindings-file-location jboss.home="${nbia-grid.jboss.home}"
                                           jboss.server.name="${nbia-grid.jboss.server.name}"
                                           jboss.bindings.file.location.property.name="nbia-grid.jboss.server.bindingfile.location"
                                           jboss.server.ports.name.property.name="nbia-grid.jboss.server.ports.name"/>

        <jboss-read-ports jboss.server.ports.name="${nbia-grid.jboss.server.ports.name}"
                          jboss.server.bindingfile.location="${nbia-grid.jboss.server.bindingfile.location}"

                          jboss.server.jndi.port.property.name="nbia-grid.jboss.server.jndi.port"
                          jboss.server.port.property.name="nbia-grid.jboss.server.port"
                          jboss.ejbinvoker.port.property.name="nbia-grid.jboss.ejbinvoker.port"
                          jboss.server.rmi.port.property.name="nbia-grid.jboss.server.rmi.port"
                          jboss.web.service.port.property.name="nbia-grid.jboss.web.service.port"
                          jboss.service.rmiobject.port.property.name="nbia-grid.jboss.service.rmiobject.port"
                          jboss.server.bind.port.property.name="nbia-grid.jboss.server.bind.port"
                          jboss.hajndi.port.property.name="nbia-grid.jboss.hajndi.port"
                          jboss.hajrmi.port.property.name="nbia-grid.jboss.hajrmi.port"
                          jboss.pooledha.port.property.name="nbia-grid.jboss.pooledha.port"
                          jboss.cobraorb.port.property.name="nbia-grid.jboss.cobraorb.port"
                          jboss.jmx-rmi.port.property.name="nbia-grid.jboss.jmx-rmi.port"
                          jboss.snmp-trapd.port.property.name="nbia-grid.jboss.snmp-trapd.port"
                          jboss.snmp.port.property.name="nbia-grid.jboss.snmp.port"
                          jboss.jms.port.property.name="nbia-grid.jboss.jms.port"
                          jboss.remoting.port.property.name="nbia-grid.jboss.remoting.port"
                          jboss.messaging.port.property.name="nbia-grid.jboss.messaging.port"/>


        <jboss-read-external-hostname jboss.server-xml.file="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/deploy/jbossweb-tomcat55.sar/server.xml"
                                      jboss.external.http.host.property.name="nbia-grid.jboss.external.http.host"
                                      jboss.external.http.port.property.name="nbia-grid.jboss.external.http.port"/>



        <grid-read-index-url
                grid.wsrf.dir="${nbia-grid.wsrf.path}"
                />

        <grid-read-poc grid.wsrf.dir="${nbia-grid.wsrf.path}"
                       grid.service.name="NBIAService" />

        <!-- for tier installs, should be done first, since it is set first it will be the one used if it exists -->
        <jboss-read-java_opts
            jboss.bin.dir="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/bin"
            jboss.home="${nbia-grid.jboss.home}"
            jboss.java.opts.property.name="nbia-grid.jboss.java.opts"
            />
        <jboss-read-java_opts
            jboss.bin.dir="${nbia-grid.jboss.home}/bin"
            jboss.home="${nbia-grid.jboss.home}"
            jboss.java.opts.property.name="nbia-grid.jboss.java.opts"
            />

        <!-- Fail if any read properties are not set -->
        <echo message="All properties after readers"/>
        <properties-print
                properties.list="${read.properties.list},nbia-grid.jboss.server.hostname"
                />
        <properties-exist
                properties.list="${read.properties.list},nbia-grid.jboss.server.hostname"
                />
        <properties-write
                properties.list="${read.properties.list},nbia-grid.jboss.server.hostname"
                />
      </try>
      <catch>
        <echo>Couldnt read properties from (second) unsecured grid instance. Could be because it's not there yet?</echo>
        <echo>${unsecured.reader.exception}</echo>
      </catch>
    </trycatch>
  </target>


  <target name="install:nbia-grid:init"
          depends="common:common:init:pre"
          unless="exclude.nbia-grid">

    <!-- determine if port configurations or port lists are being called -->
    <if>
      <isset property="nbia-grid.jboss.ncicb-standard.port-config"/>
      <then>
        <!-- Read some port properties from standard bindings file -->
        <echo message="Using JBoss NCICB Standard port configurations"/>
        <property name="nbia-grid.jboss.server.binding.template.location" value="${basedir}/${jboss-bindings.file}"/>

        <jboss-read-ports
          jboss.server.bindingfile.location="${nbia-grid.jboss.server.binding.template.location}"
          jboss.server.ports.name="${nbia-grid.jboss.server.ports.name}"
          />
        <echo message="http -${nbia-grid.jboss.server.port} "/>
        <echo message="http -${nbia-grid.jboss.server.jndi.port} "/>
        <properties-exist
          properties.list="nbia-grid.jboss.server.jndi.port,nbia-grid.jboss.server.port,nbia-grid.jboss.server.ports.name"
          />
        <!-- Make sure there are not unexpanded tokens and that the jboss.server.ports.name is a configuration in the bindings file. -->
        <jboss-bindings-validate
          jboss.server.bindingfile.location="${nbia-grid.jboss.server.binding.template.location}"
          jboss.server.ports.name="${nbia-grid.jboss.server.ports.name}"
          />
      </then>
      <else>
        <!-- else ensure that all ports are set, since these will be removed from install-properties.template we will verify here.  They have to be removed so the validator works with or without the properties or we have to change the format of the file. -->
        <echo message="Using custom JBoss port configurations"/>
        <property name="nbia-grid.jboss.server.binding.template.location" value="${bda-utils.dir}/resource/${jboss.binaries.relative.dir}/bindings.xml"/>
        <properties-exist
          properties.list="nbia-grid.jboss.server.jndi.port,nbia-grid.jboss.server.port,nbia-grid.jboss.cobraorb.port,nbia-grid.jboss.ejbinvoker.port,nbia-grid.jboss.hajndi.port,nbia-grid.jboss.hajrmi.port,nbia-grid.jboss.jms.port,nbia-grid.jboss.jmx-rmi.port,nbia-grid.jboss.messaging.port,nbia-grid.jboss.pooledha.port,nbia-grid.jboss.remoting.port,nbia-grid.jboss.server.bind.port,nbia-grid.jboss.server.rmi.port,nbia-grid.jboss.service.rmiobject.port,nbia-grid.jboss.snmp.port,nbia-grid.jboss.snmp-trapd.port,nbia-grid.jboss.web.service.port"
          />
      </else>
    </if>
  </target>


  <target name="common:nbia-grid:init"
          depends="common:common:init:pre"
          unless="exclude.nbia-grid">
    <fail unless="application.base.path"/>
<echo>exclude.nbia-grid: ${exclude.nbia-grid}</echo>
    <property name="nbia-grid.home" value="${application.base.path}/${nbia-grid.jboss.relative.path}"/>
    <property name="nbia-grid.jboss.home" value="${application.base.path}/${nbia-grid.jboss.relative.path}"/>
    <property name="nbia-grid.wsrf.path" location="${nbia-grid.jboss.home}/server/${nbia-grid.jboss.server.name}/deploy/wsrf.war"/>
    <echo>FOO:${nbia-grid.wsrf.path}</echo>
    <echo>wtf: ${application.base.path}</echo>

    <available file="${nbia-grid.home}" property="nbia-grid.exists"/>
    <available file="${nbia-grid.jboss.home}" property="nbia-grid.jboss.exists"/>

    <echo>foo:      ${nbia-grid.jboss.home}</echo>
    <echo>foo2:      ${nbia-grid.jboss.server.name}</echo>
  </target>


  <target name="upgrade:nbia-grid:init"
          depends="common:nbia-grid:init,
                   upgrade:nbia-grid:init:prep,
                   upgrade:nbia-grid:readers:bda,
                   upgrade:nbia-grid:readers:custom"
          unless="exclude.nbia-grid">
    <properties-print
      properties.list="${read.properties.list}"
      />
    <properties-exist
      properties.list="${read.properties.list}"
      />
    <properties-write
      properties.list="${read.properties.list}"
      />
  </target>



  <target name="upgrade:nbia-grid:init:prep"
          depends="upgrade:common:init:prep"
          unless="exclude.nbia-grid">

    <echo message="nbia-grid.home = ${nbia-grid.home}"/>
    <echo message="nbia-grid.jboss.home = ${nbia-grid.jboss.home}"/>
    <if>
      <equals arg1="${nbia-grid.jboss.ncicb-standard.port-config}" arg2="true"/>
      <then>
        <property name="nbia-grid.jboss.server.binding.template.location"
                  value="${basedir}/${jboss-bindings.file}"/>
      </then>
      <else>
        <property name="nbia-grid.jboss.server.binding.template.location"
                  value="${bda-utils.dir}/resource/${jboss.binaries.relative.dir}/bindings.xml"/>
      </else>
    </if>

    <available file="${nbia-grid.home}" property="nbia-grid.exists"/>
    <available file="${nbia-grid.jboss.home}" property="nbia-grid.jboss.exists"/>
    <property name="read.nbia-grid.home" value="${nbia-grid.home}"/>
  </target>

</project>
