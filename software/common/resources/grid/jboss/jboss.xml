<?xml version="1.0"?>
<!--
  Copyright 1999-2006 University of Chicago
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!-- ===================================================================

   Build File for Deploying Java WS Core into JBoss

Notes:
   This is a build file for use with the Jakarta Ant build tool.

Prerequisites:

   jakarta-ant from http://jakarta.apache.org

Build Instructions:
   To build, run

     ant <target>

   on the directory where this file is located with the target you want.

==================================================================== -->

<project default="deployJBoss" basedir=".">

	<description>
        This build script may be used to deploy the toolkit into
        JBoss.

        The targets in this script honor the following parameters:

        deployJBoss:
        redeployJBoss:

           - deploy.dir    The installation directory to deploy
                           from. Defaults to $GLOBUS_LOCATION.
           - jboss.dir     The root directory of the JBoss
                           installation.

    </description>

	<property environment="env" />

	<property name="deploy.dir" location="${env.GLOBUS_LOCATION}" />
	<property name="abs.deploy.dir" location="${deploy.dir}" />

	<property name="webapp.name" value="wsrf" />

	<property name="xalanJar" value="xalan.jar" />
	<property name="xercesJar" value="xercesImpl-2.7.1.jar" />
	<property name="xmlApiJar" value="xml-apis.jar" />
	<property name="oldXmlApiJar" value="xmlParserAPIs.jar" />

	<property name="endorsed.dir" value="${jboss.dir}/lib/endorsed" />


  <xmlcatalog id="grid.xml.catalog">
    <dtd publicId="-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
         location="${dtd.dir}/web-app_2_3.dtd" /> 
  </xmlcatalog>

	<!-- =================================================================== -->
	<!-- JBoss deployment                                                    -->
	<!-- =================================================================== -->

	<target name="deploySecureJBoss" description="Deploy GT4 into Secure JBoss. Must specify -Djboss.dir=&lt;JBoss root&gt;">
		<property name="defaultProtocol" value="https" />
		<property name="defaultPort" value="8443" />
		<property name="webapp.dir" value="${jboss.dir}/server/default/deploy/${webapp.name}.war" />
		<property name="webapp.webinf.dir" value="${webapp.dir}/WEB-INF" />
		<property name="webapp.webinf.lib.dir" value="${webapp.webinf.dir}/lib" />
		<property name="common.lib.dir" value="${jboss.dir}/server/default/lib" />

		<antcall target="deployJBoss" />

		<echo message="${webapp.webinf.dir}/etc/globus_wsrf_core/server-config.wsdd" />

		<replace file="${webapp.webinf.dir}/etc/globus_wsrf_core/server-config.wsdd">
			<replacetoken><![CDATA[<!-- @TOMCAT_SEC_HANDLER@ -->]]></replacetoken>
			<replacevalue><![CDATA[<handler type="java:org.globus.wsrf.impl.security.authentication.transport.TomcatTransportSecurityHandler"/>]]></replacevalue>
		</replace>

	</target>


	<target name="deployJBoss" description="Deploy GT4 into JBoss. Must specify -Djboss.dir=&lt;JBoss root&gt;">
		<property name="defaultProtocol" value="http" />
		<property name="defaultPort" value="8080" />
		<property name="webapp.dir" value="${jboss.dir}/server/default/deploy/${webapp.name}.war" />
		<property name="webapp.webinf.dir" value="${webapp.dir}/WEB-INF" />
		<property name="webapp.webinf.lib.dir" value="${webapp.webinf.dir}/lib" />
		<property name="common.lib.dir" value="${jboss.dir}/server/default/lib" />

		<fail message="Must specify -Djboss.dir=&lt;JBoss root&gt;" unless="jboss.dir" />
		<available file="${jboss.dir}" type="dir" property="jboss.dir.exists" />
		<fail message="${jboss.dir} directory does not exists" unless="jboss.dir.exists" />

		<antcall target="_baseDeploy" />
		<antcall target="_baseLibDeploy" />
		<antcall target="_baseEndorsedLibDeploy">
		</antcall>

		<copy file="${abs.deploy.dir}/lib/cog-tomcat.jar" toDir="${jboss.dir}/server/default/lib" failonerror="false" />

		<copy file="${webapp.webinf.dir}/web.xml" overwrite="true" toFile="${webapp.webinf.dir}/web.xml.bak" />

		<xslt style="set-param.xsl" force="true" in="${webapp.webinf.dir}/web.xml.bak" out="${webapp.webinf.dir}/web.xml">
      <xmlcatalog refid="grid.xml.catalog"/>
      
			<param name="parameterName" expression="webContext" />
			<param name="parameterValue" expression="${webapp.name}" />
		</xslt>

		<copy file="${basedir}/jboss-web.xml.in" toFile="${webapp.webinf.dir}/jboss-web.xml" />
		<replace file="${webapp.webinf.dir}/jboss-web.xml" token="@webapp.name@" value="${webapp.name}.war" />

		<available file="${webapp.dir}/share/schema/resolutionService/resolution_port_type.wsdl" property="resolutionService.exists" />
		<antcall target="fixResourceServicePortType" />
	</target>

	<target name="fixResourceServicePortType" if="resolutionService.exists">
		<concat destfile="${webapp.dir}/share/schema/resolutionService/resolution_port_type.wsdl.tmp">
			<header filtering="no" trimleading="yes"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>]]>
			</header>
			<filelist dir="${webapp.dir}/share/schema/resolutionService/" files="resolution_port_type.wsdl"></filelist>
		</concat>
		<move overwrite="true" tofile="${webapp.dir}/share/schema/resolutionService/resolution_port_type.wsdl" file="${webapp.dir}/share/schema/resolutionService/resolution_port_type.wsdl.tmp"/>
	</target>

	<target name="redeployJBoss" description="Redeploy GT4 into JBoss. Must specify -Djboss.dir=&lt;JBosst root&gt;">

		<fail message="Must specify -Djboss.dir=&lt;JBoss root&gt;" unless="jboss.dir" />

		<property name="webapp.dir" value="${jboss.dir}/server/default/deploy/${webapp.name}.war" />
		<property name="common.lib.dir" value="${jboss.dir}/server/default/lib" />

		<ant antfile="tomcat.xml" target="_baseUndeploy" />

		<delete file="${common.lib.dir}/server/default/lib/cog-tomcat.jar" />
		<antcall target="deployJBoss" />
	</target>


	<!-- =================================================================== -->
	<!-- Base Deployment Scripts                                             -->
	<!-- =================================================================== -->

	<target name="_baseDeploy">
		<mkdir dir="${webapp.dir}" />
		<copy toDir="${webapp.dir}" overwrite="true">
			<fileset dir="${abs.deploy.dir}" casesensitive="yes">
				<include name="share/schema/**" />
			</fileset>
		</copy>

		<mkdir dir="${webapp.webinf.dir}" />
		<copy toDir="${webapp.webinf.dir}" overwrite="true">
			<fileset dir="${abs.deploy.dir}" casesensitive="yes">
				<include name="etc/**" />
				<exclude name="etc/globus_packages/**" />
				<exclude name="etc/gpt/**" />
				<exclude name="etc/globus_core/**" />
				<exclude name="etc/ssh/**" />
				<include name="libexec/**" />
			</fileset>
		</copy>

		<chmod perm="755">
			<fileset dir="${webapp.webinf.dir}">
				<include name="libexec/**" />
			</fileset>
		</chmod>

		<mkdir dir="${webapp.webinf.dir}/classes" />
		<copy toDir="${webapp.webinf.dir}/classes" overwrite="true">
			<fileset dir="${abs.deploy.dir}" casesensitive="yes">
				<include name="client-config.wsdd" />
			</fileset>
		</copy>
		<copy overwrite="true" file="${abs.deploy.dir}/container-log4j.properties" toFile="${webapp.webinf.dir}/classes/log4j.properties" />
		<replace file="${webapp.webinf.dir}/classes/log4j.properties" token="org.globus.util.log4j.PatternLayout" value="org.apache.log4j.PatternLayout" />

		<mkdir dir="${webapp.webinf.lib.dir}" />
		<copy overwrite="true" file="${basedir}/web.xml" toDir="${webapp.webinf.dir}" />

		<antcall target="_setDefaults" />

	</target>

	<target name="_baseLibDeploy">
		<copy toDir="${webapp.webinf.lib.dir}" overwrite="true">
			<fileset dir="${abs.deploy.dir}/lib" casesensitive="yes">
				<include name="*.jar" />
				<include name="*.zip" />
				<exclude name="servlet.jar" />
				<exclude name="xml-apis.jar" />
				<exclude name="cog-tomcat.jar" />
				<exclude name="cog-jglobus.jar" />
				<exclude name="cryptix.jar" />
				<exclude name="cryptix-asn1.jar" />
				<exclude name="cryptix32.jar" />
				<exclude name="jce-jdk13-*.jar" />
				<exclude name="puretls.jar" />
				<exclude name="log4j-*.jar" />
				<exclude name="commons-logging-*.jar" />
			</fileset>
		</copy>

		<!-- copy over the patched jar files for wsrf-core -->
		<copy toDir="${webapp.webinf.lib.dir}" overwrite="true">
			<fileset dir="${basedir}" casesensitive="yes">
				<include name="*.jar" />
			</fileset>
		</copy>

		<copy toDir="${common.lib.dir}" overwrite="true">
			<fileset dir="${abs.deploy.dir}/lib" casesensitive="yes">
				<include name="cog-jglobus.jar" />
				<include name="xml-apis.jar" />
				<include name="cryptix.jar" />
				<include name="cryptix-asn1.jar" />
				<include name="cryptix32.jar" />
				<include name="jce-jdk13-*.jar" />
				<include name="log4j-*.jar" />
				<include name="puretls.jar" />
			</fileset>
		</copy>

	</target>

	<target name="_baseEndorsedLibDeploy">
		<!--<copy file="${abs.deploy.dir}/endorsed/${xalanJar}" toFile="${endorsed.dir}/xalan.jar" failonerror="false" />-->
	</target>


	<target name="_setDefaults">
		<echo message="Setting default protocol/port to: ${defaultProtocol}/${defaultPort}" />
		<copy file="${webapp.webinf.dir}/web.xml" overwrite="true" toFile="${webapp.webinf.dir}/web.xml.bak" />

		<xslt style="set-param.xsl" force="true" in="${webapp.webinf.dir}/web.xml.bak" out="${webapp.webinf.dir}/web.xml.tmp">
      <xmlcatalog refid="grid.xml.catalog"/>
    
			<param name="parameterName" expression="defaultProtocol" />
			<param name="parameterValue" expression="${defaultProtocol}" />
		</xslt>
		<xslt style="set-param.xsl" force="true" in="${webapp.webinf.dir}/web.xml.tmp" out="${webapp.webinf.dir}/web.xml">
      <xmlcatalog refid="grid.xml.catalog"/>
      
			<param name="parameterName" expression="defaultPort" />
			<param name="parameterValue" expression="${defaultPort}" />
		</xslt>

		<fixcrlf srcdir="${webapp.webinf.dir}" eol="lf" includes="web.xml" />
	</target>


	<!-- =================================================================== -->
	<!-- Base UnDeployment Script                                            -->
	<!-- =================================================================== -->

	<target name="_baseUndeploy">
		<delete dir="${webapp.dir}" />
		<delete>
			<fileset dir="${common.lib.dir}" casesensitive="yes">
				<include name="cog-jglobus.jar" />
				<include name="xml-apis.jar" />
				<include name="cryptix.jar" />
				<include name="cryptix-asn1.jar" />
				<include name="cryptix32.jar" />
				<include name="jce-jdk13-*.jar" />
				<include name="log4j-*.jar" />
				<include name="puretls.jar" />
			</fileset>
		</delete>
	</target>

	<!-- =================================================================== -->
	<!-- This target generates the war file that should run in any servlet   -->
	<!-- container. Some shared files might need to be installed separately  -->
	<!-- =================================================================== -->

	<target name="war" description="Creates a war file. Must specify -Dwar.file=&lt;war file path&gt;">
		<fail message="Must specify -Dwar.file=&lt;war file path&gt;" unless="war.file" />
		<mkdir dir="temp-tomcat" />
		<antcall target="deployTomcat">
			<param name="tomcat.dir" value="temp-tomcat" />
		</antcall>
		<war destfile="${war.file}" webxml="temp-tomcat/webapps/${webapp.name}/WEB-INF/web.xml" excludes="WEB-INF/web.xml" basedir="temp-tomcat/webapps/${webapp.name}" />
		<delete dir="temp-tomcat" />
	</target>


</project>
