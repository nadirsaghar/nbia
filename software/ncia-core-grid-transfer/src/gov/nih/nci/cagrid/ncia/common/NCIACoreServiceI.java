package gov.nih.nci.cagrid.ncia.common;

import gov.nih.nci.cagrid.data.MalformedQueryException;
import gov.nih.nci.cagrid.data.QueryProcessingException;

import java.rmi.RemoteException;

/**
 * This class is autogenerated, DO NOT EDIT.
 *
 * This interface represents the API which is accessable on the grid service from the client.
 *
 * @created by Introduce Toolkit version 1.2
 *
 */
public interface NCIACoreServiceI {

  /**
   * The standard caGrid Data Service query method.
   *
   * @param cqlQuery
   *	The CQL query to be executed against the data source.
   * @return The result of executing the CQL query against the data source.
   * @throws QueryProcessingException
   *	Thrown when an error occurs in processing a CQL query
   * @throws MalformedQueryException
   *	Thrown when a query is found to be improperly formed
   */
  public gov.nih.nci.cagrid.cqlresultset.CQLQueryResults query(gov.nih.nci.cagrid.cqlquery.CQLQuery cqlQuery) throws RemoteException, gov.nih.nci.cagrid.data.faults.QueryProcessingExceptionType, gov.nih.nci.cagrid.data.faults.MalformedQueryExceptionType ;

  /**
   * Retrieve dicom files based on CQLQuery
   *
   * @param cQLQuery
   */
  public org.cagrid.transfer.context.stubs.types.TransferServiceContextReference retrieveDicomData(gov.nih.nci.cagrid.cqlquery.CQLQuery cQLQuery) throws RemoteException ;

  /**
   * retrieve dicom files based on patientId
   *
   * @param patientId
   */
  public org.cagrid.transfer.context.stubs.types.TransferServiceContextReference retrieveDicomDataByPatientId(java.lang.String patientId) throws RemoteException ;

  /**
   * retrieve dicom files based on series instance uid
   *
   * @param seriesInstanceUID
   */
  public org.cagrid.transfer.context.stubs.types.TransferServiceContextReference retrieveDicomDataBySeriesUID(java.lang.String seriesInstanceUID) throws RemoteException ;

  /**
   * retrieve dicom files based on study instance uid
   *
   * @param studyInstanceUID
   */
  public org.cagrid.transfer.context.stubs.types.TransferServiceContextReference retrieveDicomDataByStudyUID(java.lang.String studyInstanceUID) throws RemoteException ;

  /**
   * retrieve dicom files based on list of patient ids
   *
   * @param patientIds
   */
  public org.cagrid.transfer.context.stubs.types.TransferServiceContextReference retrieveDicomDataByPatientIds(java.lang.String[] patientIds) throws RemoteException ;

  /**
   * retrieve dicom data based on list of series instance uids
   *
   * @param seriesInstanceUids
   */
  public org.cagrid.transfer.context.stubs.types.TransferServiceContextReference retrieveDicomDataBySeriesUIDs(java.lang.String[] seriesInstanceUids) throws RemoteException ;

  /**
   * retrieve dicom files based on list of study instance uids
   *
   * @param studyInstanceUids
   */
  public org.cagrid.transfer.context.stubs.types.TransferServiceContextReference retrieveDicomDataByStudyUIDs(java.lang.String[] studyInstanceUids) throws RemoteException ;

  /**
   * get total number of study timepoint for a given patient
   *
   * @param patientId
   */
  public int getNumberOfStudyTimePointForPatient(java.lang.String patientId) throws RemoteException ;

  /**
   * retrieve dicom files for the nth study timepoint of the given patient
   *
   * @param patientId
   * @param studyTimepoint
   */
  public org.cagrid.transfer.context.stubs.types.TransferServiceContextReference retrieveDicomDataByNthStudyTimePointForPatient(java.lang.String patientId,int studyTimepoint) throws RemoteException ;

  /**
   * get one Image meta data for a given series instance uid. This image is around the middle image of the series.
   *
   * @param seriesInstanceUID
   */
  public gov.nih.nci.ncia.domain.Image getRepresentativeImageBySeries(java.lang.String seriesInstanceUID) throws RemoteException ;

  public org.oasis.wsrf.properties.GetMultipleResourcePropertiesResponse getMultipleResourceProperties(org.oasis.wsrf.properties.GetMultipleResourceProperties_Element params) throws RemoteException ;

  public org.oasis.wsrf.properties.GetResourcePropertyResponse getResourceProperty(javax.xml.namespace.QName params) throws RemoteException ;

  public org.oasis.wsrf.properties.QueryResourcePropertiesResponse queryResourceProperties(org.oasis.wsrf.properties.QueryResourceProperties_Element params) throws RemoteException ;

  /**
   * Return what terms are searchable at this node (collection names, modalities, etc.)
   *
   */
  public gov.nih.nci.ncia.search.AvailableSearchTerms getAvailableSearchTerms() throws RemoteException ;

  /**
   * nuff said
   *
   * @param searchCriteriaDTO
   */
  public gov.nih.nci.ncia.search.PatientSearchResult[] searchForPatients(gov.nih.nci.ncia.search.SearchCriteriaDTO[] searchCriteriaDTO) throws RemoteException ;

  /**
   * s
   *
   * @param patientSearchResult
   */
  public gov.nih.nci.ncia.search.StudySearchResult[] retrieveStudyAndSeriesForPatient(gov.nih.nci.ncia.search.PatientSearchResult patientSearchResult) throws RemoteException ;

  public gov.nih.nci.ncia.search.ImageSearchResult[] retrieveImagesForSeries(gov.nih.nci.ncia.search.SeriesSearchResult seriesSearchResult) throws RemoteException ;

  public gov.nih.nci.ncia.dto.DicomTagDTO[] viewDicomHeader(gov.nih.nci.ncia.search.ImageSearchResult imageSearchResult) throws RemoteException ;

  public gov.nih.nci.ncia.search.UsAvailableSearchTerms getUsAvailableSearchTerms() throws RemoteException ;

  public gov.nih.nci.ncia.search.ImageSearchResultEx[] retrieveImagesForSeriesEx(gov.nih.nci.ncia.search.SeriesSearchResult seriesSearchResult) throws RemoteException ;

}

